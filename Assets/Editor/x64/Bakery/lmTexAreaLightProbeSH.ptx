//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[44];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<150>;
	.reg .b16 	%rs<158>;
	.reg .f32 	%f<1317>;
	.reg .b32 	%r<420>;
	.reg .b64 	%rd<317>;


	mov.u64 	%rd316, __local_depot0;
	cvta.local.u64 	%SP, %rd316;
	ld.global.u32 	%r1, [samples];
	shl.b32 	%r2, %r1, 1;
	ld.global.v2.u32 	{%r104, %r105}, [pixelID];
	cvt.u64.u32	%rd23, %r104;
	cvt.u64.u32	%rd24, %r105;
	mov.u64 	%rd27, uvnormal;
	cvta.global.u64 	%rd22, %rd27;
	mov.u32 	%r102, 2;
	mov.u32 	%r103, 4;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r102, %r103, %rd23, %rd24, %rd26, %rd26);
	// inline asm
	ld.u32 	%r3, [%rd21];
	shr.u32 	%r108, %r3, 16;
	cvt.u16.u32	%rs1, %r108;
	and.b16  	%rs7, %rs1, 255;
	cvt.u16.u32	%rs8, %r3;
	or.b16  	%rs9, %rs8, %rs7;
	setp.eq.s16	%p7, %rs9, 0;
	mov.f32 	%f1162, 0f00000000;
	mov.f32 	%f1163, %f1162;
	mov.f32 	%f1164, %f1162;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs10, [%rd21+1];
	and.b16  	%rs12, %rs8, 255;
	cvt.rn.f32.u16	%f358, %rs12;
	div.rn.f32 	%f359, %f358, 0f437F0000;
	fma.rn.f32 	%f360, %f359, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f361, %rs10;
	div.rn.f32 	%f362, %f361, 0f437F0000;
	fma.rn.f32 	%f363, %f362, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f364, %rs7;
	div.rn.f32 	%f365, %f364, 0f437F0000;
	fma.rn.f32 	%f366, %f365, 0f40000000, 0fBF800000;
	mul.f32 	%f367, %f363, %f363;
	fma.rn.f32 	%f368, %f360, %f360, %f367;
	fma.rn.f32 	%f369, %f366, %f366, %f368;
	sqrt.rn.f32 	%f370, %f369;
	rcp.rn.f32 	%f371, %f370;
	mul.f32 	%f1162, %f360, %f371;
	mul.f32 	%f1163, %f363, %f371;
	mul.f32 	%f1164, %f366, %f371;

BB0_2:
	ld.global.v2.u32 	{%r109, %r110}, [pixelID];
	ld.global.v2.u32 	{%r112, %r113}, [tileInfo];
	add.s32 	%r4, %r109, %r112;
	add.s32 	%r5, %r110, %r113;
	setp.eq.f32	%p8, %f1163, 0f00000000;
	setp.eq.f32	%p9, %f1162, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f1164, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_141;
	bra.uni 	BB0_3;

BB0_141:
	ld.global.u32 	%r419, [imageEnabled];
	and.b32  	%r340, %r419, 1;
	setp.eq.b32	%p141, %r340, 1;
	@!%p141 bra 	BB0_143;
	bra.uni 	BB0_142;

BB0_142:
	cvt.u64.u32	%rd196, %r4;
	cvt.u64.u32	%rd197, %r5;
	mov.u64 	%rd200, image;
	cvta.global.u64 	%rd195, %rd200;
	mov.u64 	%rd199, 0;
	// inline asm
	call (%rd194), _rt_buffer_get_64, (%rd195, %r102, %r103, %rd196, %rd197, %rd199, %rd199);
	// inline asm
	mov.u16 	%rs90, 0;
	st.v4.u8 	[%rd194], {%rs90, %rs90, %rs90, %rs90};
	ld.global.u32 	%r419, [imageEnabled];

BB0_143:
	and.b32  	%r343, %r419, 8;
	setp.eq.s32	%p142, %r343, 0;
	@%p142 bra 	BB0_145;

	cvt.u64.u32	%rd204, %r5;
	cvt.u64.u32	%rd203, %r4;
	mov.u64 	%rd207, image_Mask;
	cvta.global.u64 	%rd202, %rd207;
	mov.u64 	%rd206, 0;
	// inline asm
	call (%rd201), _rt_buffer_get_64, (%rd202, %r102, %r102, %rd203, %rd204, %rd206, %rd206);
	// inline asm
	mov.f32 	%f1117, 0f00000000;
	cvt.rzi.u32.f32	%r346, %f1117;
	cvt.u16.u32	%rs91, %r346;
	mov.u16 	%rs92, 0;
	st.v2.u8 	[%rd201], {%rs91, %rs92};
	ld.global.u32 	%r419, [imageEnabled];

BB0_145:
	cvt.u64.u32	%rd19, %r4;
	cvt.u64.u32	%rd20, %r5;
	and.b32  	%r347, %r419, 4;
	setp.eq.s32	%p143, %r347, 0;
	@%p143 bra 	BB0_149;

	ld.global.u32 	%r348, [additive];
	setp.eq.s32	%p144, %r348, 0;
	@%p144 bra 	BB0_148;

	mov.u64 	%rd220, image_HDR;
	cvta.global.u64 	%rd209, %rd220;
	mov.u32 	%r352, 8;
	mov.u64 	%rd219, 0;
	// inline asm
	call (%rd208), _rt_buffer_get_64, (%rd209, %r102, %r352, %rd19, %rd20, %rd219, %rd219);
	// inline asm
	ld.v4.u16 	{%rs99, %rs100, %rs101, %rs102}, [%rd208];
	// inline asm
	{  cvt.f32.f16 %f1118, %rs99;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1119, %rs100;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1120, %rs101;}

	// inline asm
	// inline asm
	call (%rd214), _rt_buffer_get_64, (%rd209, %r102, %r352, %rd19, %rd20, %rd219, %rd219);
	// inline asm
	add.f32 	%f1121, %f1118, 0f00000000;
	add.f32 	%f1122, %f1119, 0f00000000;
	add.f32 	%f1123, %f1120, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f1123;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs97, %f1122;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs96, %f1121;}

	// inline asm
	mov.u16 	%rs103, 0;
	st.v4.u16 	[%rd214], {%rs96, %rs97, %rs98, %rs103};
	bra.uni 	BB0_149;

BB0_3:
	ld.global.v2.u32 	{%r122, %r123}, [pixelID];
	cvt.u64.u32	%rd30, %r122;
	cvt.u64.u32	%rd31, %r123;
	mov.u64 	%rd40, uvpos;
	cvta.global.u64 	%rd29, %rd40;
	mov.u32 	%r118, 12;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r102, %r118, %rd30, %rd31, %rd26, %rd26);
	// inline asm
	ld.f32 	%f9, [%rd28+8];
	ld.f32 	%f8, [%rd28+4];
	ld.f32 	%f7, [%rd28];
	mul.f32 	%f388, %f7, 0f3456BF95;
	mul.f32 	%f389, %f8, 0f3456BF95;
	mul.f32 	%f390, %f9, 0f3456BF95;
	abs.f32 	%f10, %f1162;
	div.rn.f32 	%f391, %f388, %f10;
	abs.f32 	%f392, %f1163;
	div.rn.f32 	%f393, %f389, %f392;
	abs.f32 	%f11, %f1164;
	div.rn.f32 	%f394, %f390, %f11;
	abs.f32 	%f395, %f391;
	abs.f32 	%f396, %f393;
	abs.f32 	%f397, %f394;
	mov.f32 	%f398, 0f38D1B717;
	max.f32 	%f399, %f395, %f398;
	max.f32 	%f400, %f396, %f398;
	max.f32 	%f401, %f397, %f398;
	fma.rn.f32 	%f12, %f1162, %f399, %f7;
	fma.rn.f32 	%f13, %f1163, %f400, %f8;
	fma.rn.f32 	%f14, %f1164, %f401, %f9;
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd36, %r126;
	cvt.u64.u32	%rd37, %r127;
	mov.u64 	%rd41, rnd_seeds;
	cvta.global.u64 	%rd35, %rd41;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r102, %r103, %rd36, %rd37, %rd26, %rd26);
	// inline asm
	ld.u32 	%r130, [%rd34];
	mad.lo.s32 	%r6, %r130, 1664525, 1013904223;
	ld.global.u32 	%r131, [lightMeshBufferSize];
	setp.eq.s32	%p14, %r131, 0;
	mov.pred 	%p13, 0;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r8, 0;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	and.b32  	%r134, %r6, 16777215;
	cvt.rn.f32.u32	%f418, %r134;
	mul.f32 	%f419, %f418, 0fB3800000;
	fma.rn.f32 	%f19, %f419, 0f3F333333, 0f3F800000;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r388, 0;
	abs.f32 	%f542, %f17;
	abs.f32 	%f543, %f16;
	max.f32 	%f544, %f543, %f542;
	abs.f32 	%f545, %f18;
	max.f32 	%f546, %f544, %f545;
	mov.u32 	%r8, %r388;
	mov.f32 	%f21, %f20;
	mov.f32 	%f22, %f20;
	mov.f32 	%f23, %f20;
	mov.f32 	%f24, %f20;
	mov.f32 	%f25, %f20;
	mov.f32 	%f26, %f20;
	mov.f32 	%f27, %f20;
	mov.f32 	%f28, %f20;
	mov.f32 	%f29, %f20;
	mov.f32 	%f30, %f20;
	mov.f32 	%f31, %f20;
	mov.f32 	%f32, %f20;
	mov.f32 	%f33, %f20;
	mov.f32 	%f34, %f20;
	mov.f32 	%f35, %f20;

BB0_6:
	mul.lo.s32 	%r9, %r388, 3;
	cvt.s64.s32	%rd44, %r9;
	mov.u64 	%rd48, lightMeshBuffer;
	cvta.global.u64 	%rd43, %rd48;
	mov.u32 	%r135, 1;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r135, %r118, %rd44, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f420, [%rd42];
	sub.f32 	%f421, %f420, %f7;
	ld.f32 	%f422, [%rd42+4];
	sub.f32 	%f423, %f422, %f8;
	ld.f32 	%f424, [%rd42+8];
	sub.f32 	%f425, %f424, %f9;
	mul.f32 	%f426, %f423, %f423;
	fma.rn.f32 	%f427, %f421, %f421, %f426;
	fma.rn.f32 	%f428, %f425, %f425, %f427;
	sqrt.rn.f32 	%f36, %f428;
	rcp.rn.f32 	%f429, %f36;
	mul.f32 	%f37, %f421, %f429;
	mul.f32 	%f38, %f423, %f429;
	mul.f32 	%f39, %f425, %f429;
	mul.f32 	%f430, %f1163, %f38;
	fma.rn.f32 	%f431, %f1162, %f37, %f430;
	fma.rn.f32 	%f40, %f1164, %f39, %f431;
	setp.leu.f32	%p15, %f40, 0f00000000;
	@%p15 bra 	BB0_22;

	setp.ne.s32	%p17, %r1, 0;
	mul.f32 	%f432, %f36, %f36;
	mul.f32 	%f433, %f432, 0f40C90FDB;
	div.rn.f32 	%f434, %f15, %f433;
	add.f32 	%f41, %f434, %f434;
	setp.gt.f32	%p18, %f41, %f19;
	and.pred  	%p19, %p17, %p18;
	mov.pred 	%p149, -1;
	@%p19 bra 	BB0_24;

	ld.global.f32 	%f437, [lightInvCutoff];
	mul.f32 	%f42, %f36, %f437;
	mov.f32 	%f441, 0f40800000;
	abs.f32 	%f44, %f42;
	setp.lt.f32	%p20, %f44, 0f00800000;
	mul.f32 	%f443, %f44, 0f4B800000;
	selp.f32	%f444, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f445, %f443, %f44, %p20;
	mov.b32 	 %r137, %f445;
	and.b32  	%r138, %r137, 8388607;
	or.b32  	%r139, %r138, 1065353216;
	mov.b32 	 %f446, %r139;
	shr.u32 	%r140, %r137, 23;
	cvt.rn.f32.u32	%f447, %r140;
	add.f32 	%f448, %f444, %f447;
	setp.gt.f32	%p21, %f446, 0f3FB504F3;
	mul.f32 	%f449, %f446, 0f3F000000;
	add.f32 	%f450, %f448, 0f3F800000;
	selp.f32	%f451, %f449, %f446, %p21;
	selp.f32	%f452, %f450, %f448, %p21;
	add.f32 	%f453, %f451, 0fBF800000;
	add.f32 	%f436, %f451, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f435,%f436;
	// inline asm
	add.f32 	%f454, %f453, %f453;
	mul.f32 	%f455, %f435, %f454;
	mul.f32 	%f456, %f455, %f455;
	mov.f32 	%f457, 0f3C4CAF63;
	mov.f32 	%f458, 0f3B18F0FE;
	fma.rn.f32 	%f459, %f458, %f456, %f457;
	mov.f32 	%f460, 0f3DAAAABD;
	fma.rn.f32 	%f461, %f459, %f456, %f460;
	mul.rn.f32 	%f462, %f461, %f456;
	mul.rn.f32 	%f463, %f462, %f455;
	sub.f32 	%f464, %f453, %f455;
	neg.f32 	%f465, %f455;
	add.f32 	%f466, %f464, %f464;
	fma.rn.f32 	%f467, %f465, %f453, %f466;
	mul.rn.f32 	%f468, %f435, %f467;
	add.f32 	%f469, %f463, %f455;
	sub.f32 	%f470, %f455, %f469;
	add.f32 	%f471, %f463, %f470;
	add.f32 	%f472, %f468, %f471;
	add.f32 	%f473, %f469, %f472;
	sub.f32 	%f474, %f469, %f473;
	add.f32 	%f475, %f472, %f474;
	mov.f32 	%f476, 0f3F317200;
	mul.rn.f32 	%f477, %f452, %f476;
	mov.f32 	%f478, 0f35BFBE8E;
	mul.rn.f32 	%f479, %f452, %f478;
	add.f32 	%f480, %f477, %f473;
	sub.f32 	%f481, %f477, %f480;
	add.f32 	%f482, %f473, %f481;
	add.f32 	%f483, %f475, %f482;
	add.f32 	%f484, %f479, %f483;
	add.f32 	%f485, %f480, %f484;
	sub.f32 	%f486, %f480, %f485;
	add.f32 	%f487, %f484, %f486;
	mul.rn.f32 	%f488, %f441, %f485;
	neg.f32 	%f489, %f488;
	fma.rn.f32 	%f490, %f441, %f485, %f489;
	fma.rn.f32 	%f491, %f441, %f487, %f490;
	mov.f32 	%f492, 0f00000000;
	fma.rn.f32 	%f493, %f492, %f485, %f491;
	add.rn.f32 	%f494, %f488, %f493;
	neg.f32 	%f495, %f494;
	add.rn.f32 	%f496, %f488, %f495;
	add.rn.f32 	%f497, %f496, %f493;
	mov.b32 	 %r141, %f494;
	setp.eq.s32	%p22, %r141, 1118925336;
	add.s32 	%r142, %r141, -1;
	mov.b32 	 %f498, %r142;
	add.f32 	%f499, %f497, 0f37000000;
	selp.f32	%f500, %f498, %f494, %p22;
	selp.f32	%f45, %f499, %f497, %p22;
	mul.f32 	%f501, %f500, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f502, %f501;
	mov.f32 	%f503, 0fBF317200;
	fma.rn.f32 	%f504, %f502, %f503, %f500;
	mov.f32 	%f505, 0fB5BFBE8E;
	fma.rn.f32 	%f506, %f502, %f505, %f504;
	mul.f32 	%f507, %f506, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f508, %f507;
	add.f32 	%f509, %f502, 0f00000000;
	ex2.approx.f32 	%f510, %f509;
	mul.f32 	%f511, %f508, %f510;
	setp.lt.f32	%p23, %f500, 0fC2D20000;
	selp.f32	%f512, 0f00000000, %f511, %p23;
	setp.gt.f32	%p24, %f500, 0f42D20000;
	selp.f32	%f1181, 0f7F800000, %f512, %p24;
	setp.eq.f32	%p25, %f1181, 0f7F800000;
	@%p25 bra 	BB0_10;

	fma.rn.f32 	%f1181, %f1181, %f45, %f1181;

BB0_10:
	mov.f32 	%f1158, 0f40000000;
	cvt.rzi.f32.f32	%f1157, %f1158;
	add.f32 	%f1156, %f1157, %f1157;
	mov.f32 	%f1155, 0f40800000;
	sub.f32 	%f1154, %f1155, %f1156;
	abs.f32 	%f1153, %f1154;
	setp.lt.f32	%p26, %f42, 0f00000000;
	setp.eq.f32	%p27, %f1153, 0f3F800000;
	and.pred  	%p1, %p26, %p27;
	mov.b32 	 %r143, %f1181;
	xor.b32  	%r144, %r143, -2147483648;
	mov.b32 	 %f513, %r144;
	selp.f32	%f1183, %f513, %f1181, %p1;
	setp.eq.f32	%p28, %f42, 0f00000000;
	@%p28 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f516, %f42, %f42;
	selp.f32	%f1183, %f516, 0f00000000, %p27;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p29, %f42, 0f00000000;
	@%p29 bra 	BB0_14;

	mov.f32 	%f1161, 0f40800000;
	cvt.rzi.f32.f32	%f515, %f1161;
	setp.neu.f32	%p30, %f515, 0f40800000;
	selp.f32	%f1183, 0f7FFFFFFF, %f1183, %p30;

BB0_14:
	add.f32 	%f517, %f44, 0f40800000;
	mov.b32 	 %r145, %f517;
	setp.lt.s32	%p32, %r145, 2139095040;
	@%p32 bra 	BB0_19;

	setp.gtu.f32	%p33, %f44, 0f7F800000;
	@%p33 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f1183, %f42, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p34, %f44, 0f7F800000;
	@%p34 bra 	BB0_19;

	selp.f32	%f1183, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u32 	%r384, 1;
	mov.u64 	%rd309, lightMeshBuffer;
	cvta.global.u64 	%rd308, %rd309;
	mul.lo.s32 	%r383, %r388, 3;
	mov.f32 	%f518, 0f3F800000;
	sub.f32 	%f519, %f518, %f1183;
	setp.eq.f32	%p35, %f42, 0f3F800000;
	selp.f32	%f520, 0f00000000, %f519, %p35;
	cvt.sat.f32.f32	%f521, %f520;
	mul.f32 	%f522, %f41, %f521;
	add.s32 	%r148, %r383, 1;
	cvt.s64.s32	%rd51, %r148;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd308, %r384, %r118, %rd51, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f523, [%rd49];
	mul.f32 	%f524, %f37, %f523;
	ld.f32 	%f525, [%rd49+4];
	mul.f32 	%f526, %f38, %f525;
	neg.f32 	%f527, %f526;
	sub.f32 	%f528, %f527, %f524;
	ld.f32 	%f529, [%rd49+8];
	mul.f32 	%f530, %f39, %f529;
	sub.f32 	%f531, %f528, %f530;
	cvt.sat.f32.f32	%f532, %f531;
	mul.f32 	%f56, %f522, %f532;
	setp.leu.f32	%p36, %f56, 0f3727C5AC;
	@%p36 bra 	BB0_21;

	mov.u32 	%r387, 1;
	mov.u64 	%rd311, lightMeshBuffer;
	cvta.global.u64 	%rd310, %rd311;
	mul.lo.s32 	%r386, %r388, 3;
	cvt.sat.f32.f32	%f541, %f40;
	add.u64 	%rd56, %SP, 12;
	cvta.to.local.u64 	%rd63, %rd56;
	max.f32 	%f539, %f546, %f398;
	sub.f32 	%f540, %f36, %f539;
	mov.u32 	%r154, 1065353216;
	st.local.u32 	[%rd63], %r154;
	ld.global.u32 	%r149, [root];
	// inline asm
	call _rt_trace_64, (%r149, %f12, %f13, %f14, %f37, %f38, %f39, %r387, %f539, %f540, %rd56, %r103);
	// inline asm
	add.s32 	%r155, %r386, 2;
	cvt.s64.s32	%rd59, %r155;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd310, %r387, %r118, %rd59, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f548, [%rd57];
	ld.local.f32 	%f549, [%rd63];
	mul.f32 	%f550, %f549, %f548;
	ld.f32 	%f551, [%rd57+4];
	mul.f32 	%f552, %f549, %f551;
	ld.f32 	%f553, [%rd57+8];
	mul.f32 	%f554, %f549, %f553;
	mul.f32 	%f555, %f56, %f550;
	mul.f32 	%f556, %f56, %f552;
	mul.f32 	%f557, %f56, %f554;
	fma.rn.f32 	%f23, %f541, %f555, %f23;
	fma.rn.f32 	%f22, %f541, %f556, %f22;
	fma.rn.f32 	%f21, %f541, %f557, %f21;
	fma.rn.f32 	%f29, %f37, %f555, %f29;
	fma.rn.f32 	%f28, %f37, %f556, %f28;
	fma.rn.f32 	%f27, %f37, %f557, %f27;
	fma.rn.f32 	%f32, %f38, %f555, %f32;
	fma.rn.f32 	%f31, %f38, %f556, %f31;
	fma.rn.f32 	%f30, %f38, %f557, %f30;
	fma.rn.f32 	%f35, %f39, %f555, %f35;
	fma.rn.f32 	%f34, %f39, %f556, %f34;
	fma.rn.f32 	%f33, %f39, %f557, %f33;
	add.f32 	%f26, %f26, %f555;
	add.f32 	%f25, %f25, %f556;
	add.f32 	%f24, %f24, %f557;
	add.f32 	%f20, %f20, %f549;

BB0_21:
	add.s32 	%r8, %r8, 1;

BB0_22:
	ld.global.u32 	%r156, [lightMeshBufferSize];
	add.s32 	%r388, %r388, 1;
	setp.lt.u32	%p38, %r388, %r156;
	@%p38 bra 	BB0_6;
	bra.uni 	BB0_23;

BB0_4:
	mov.f32 	%f21, %f20;
	mov.f32 	%f22, %f20;
	mov.f32 	%f23, %f20;
	mov.f32 	%f24, %f20;
	mov.f32 	%f25, %f20;
	mov.f32 	%f26, %f20;
	mov.f32 	%f27, %f20;
	mov.f32 	%f28, %f20;
	mov.f32 	%f29, %f20;
	mov.f32 	%f30, %f20;
	mov.f32 	%f31, %f20;
	mov.f32 	%f32, %f20;
	mov.f32 	%f33, %f20;
	mov.f32 	%f34, %f20;
	mov.f32 	%f35, %f20;

BB0_23:
	mov.pred 	%p149, %p13;

BB0_24:
	cvt.rn.f32.s32	%f558, %r8;
	mov.f32 	%f559, 0f3F800000;
	max.f32 	%f560, %f558, %f559;
	rcp.rn.f32 	%f561, %f560;
	mul.f32 	%f1301, %f23, %f561;
	mul.f32 	%f1302, %f22, %f561;
	mul.f32 	%f1303, %f21, %f561;
	div.rn.f32 	%f1304, %f20, %f560;
	mul.f32 	%f1298, %f26, %f561;
	mul.f32 	%f1299, %f25, %f561;
	mul.f32 	%f1300, %f24, %f561;
	mul.f32 	%f1295, %f29, %f561;
	mul.f32 	%f1296, %f28, %f561;
	mul.f32 	%f1297, %f27, %f561;
	mul.f32 	%f1292, %f32, %f561;
	mul.f32 	%f1293, %f31, %f561;
	mul.f32 	%f1294, %f30, %f561;
	mul.f32 	%f1289, %f35, %f561;
	mul.f32 	%f1290, %f34, %f561;
	mul.f32 	%f1291, %f33, %f561;
	@!%p149 bra 	BB0_77;
	bra.uni 	BB0_25;

BB0_25:
	abs.f32 	%f1160, %f1164;
	abs.f32 	%f1159, %f1162;
	setp.gt.f32	%p39, %f1159, %f1160;
	neg.f32 	%f577, %f1163;
	selp.f32	%f578, %f577, 0f00000000, %p39;
	neg.f32 	%f579, %f1164;
	selp.f32	%f580, %f1162, %f579, %p39;
	selp.f32	%f581, 0f00000000, %f1163, %p39;
	mul.f32 	%f582, %f580, %f580;
	fma.rn.f32 	%f583, %f578, %f578, %f582;
	fma.rn.f32 	%f584, %f581, %f581, %f583;
	sqrt.rn.f32 	%f585, %f584;
	rcp.rn.f32 	%f586, %f585;
	mul.f32 	%f137, %f578, %f586;
	mul.f32 	%f138, %f580, %f586;
	mul.f32 	%f139, %f581, %f586;
	mov.f32 	%f576, 0f00000000;
	setp.lt.s32	%p40, %r1, 1;
	mov.f32 	%f1247, %f576;
	mov.f32 	%f1248, %f576;
	mov.f32 	%f1249, %f576;
	mov.f32 	%f1250, %f576;
	mov.f32 	%f1251, %f576;
	mov.f32 	%f1252, %f576;
	mov.f32 	%f1253, %f576;
	mov.f32 	%f1254, %f576;
	mov.f32 	%f1255, %f576;
	mov.f32 	%f1256, %f576;
	mov.f32 	%f1257, %f576;
	mov.f32 	%f1258, %f576;
	mov.f32 	%f1259, %f576;
	mov.f32 	%f1260, %f576;
	mov.f32 	%f1261, %f576;
	@%p40 bra 	BB0_76;

	mad.lo.s32 	%r395, %r130, 1664525, 1013904223;
	cvt.rn.f32.s32	%f602, %r2;
	rcp.rn.f32 	%f140, %f602;
	add.u64 	%rd65, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd65;
	mul.f32 	%f141, %f12, 0f3456BF95;
	mul.f32 	%f142, %f13, 0f3456BF95;
	mul.f32 	%f143, %f14, 0f3456BF95;
	add.u64 	%rd66, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd66;
	mul.f32 	%f603, %f1162, %f138;
	mul.f32 	%f604, %f1163, %f137;
	sub.f32 	%f144, %f604, %f603;
	mul.f32 	%f605, %f1164, %f137;
	mul.f32 	%f606, %f1162, %f139;
	sub.f32 	%f145, %f606, %f605;
	mul.f32 	%f607, %f1163, %f139;
	mul.f32 	%f608, %f1164, %f138;
	sub.f32 	%f146, %f608, %f607;
	mov.f32 	%f1247, 0f00000000;
	mov.u32 	%r157, 0;
	abs.f32 	%f609, %f142;
	abs.f32 	%f610, %f141;
	max.f32 	%f611, %f610, %f609;
	abs.f32 	%f612, %f143;
	max.f32 	%f613, %f611, %f612;
	mov.u32 	%r392, %r157;
	mov.f32 	%f1248, %f1247;
	mov.f32 	%f1249, %f1247;
	mov.f32 	%f1250, %f1247;
	mov.f32 	%f1251, %f1247;
	mov.f32 	%f1252, %f1247;
	mov.f32 	%f1253, %f1247;
	mov.f32 	%f1254, %f1247;
	mov.f32 	%f1255, %f1247;
	mov.f32 	%f1256, %f1247;
	mov.f32 	%f1257, %f1247;
	mov.f32 	%f1258, %f1247;
	mov.f32 	%f1259, %f1247;
	mov.f32 	%f1260, %f1247;
	mov.f32 	%f1261, %f1247;

BB0_27:
	cvt.rn.f32.s32	%f162, %r392;
	max.f32 	%f163, %f613, %f398;
	mov.u32 	%r394, %r157;

BB0_28:
	mad.lo.s32 	%r159, %r395, 1664525, 1013904223;
	and.b32  	%r160, %r159, 16777215;
	cvt.rn.f32.u32	%f615, %r160;
	fma.rn.f32 	%f616, %f615, 0f33800000, %f162;
	mul.f32 	%f617, %f140, %f616;
	mad.lo.s32 	%r395, %r159, 1664525, 1013904223;
	and.b32  	%r161, %r395, 16777215;
	cvt.rn.f32.u32	%f618, %r161;
	cvt.rn.f32.s32	%f619, %r394;
	fma.rn.f32 	%f620, %f618, 0f33800000, %f619;
	mul.f32 	%f621, %f140, %f620;
	fma.rn.f32 	%f179, %f617, 0fC0000000, 0f3F800000;
	mul.f32 	%f622, %f179, %f179;
	sub.f32 	%f624, %f559, %f622;
	mov.f32 	%f625, 0f00000000;
	max.f32 	%f626, %f625, %f624;
	sqrt.rn.f32 	%f180, %f626;
	mul.f32 	%f1268, %f621, 0f40C90FDB;
	abs.f32 	%f182, %f1268;
	setp.neu.f32	%p41, %f182, 0f7F800000;
	mov.f32 	%f1262, %f1268;
	@%p41 bra 	BB0_30;

	mul.rn.f32 	%f1262, %f1268, %f625;

BB0_30:
	mul.f32 	%f628, %f1262, 0f3F22F983;
	cvt.rni.s32.f32	%r405, %f628;
	cvt.rn.f32.s32	%f629, %r405;
	neg.f32 	%f630, %f629;
	mov.f32 	%f631, 0f3FC90FDA;
	fma.rn.f32 	%f632, %f630, %f631, %f1262;
	mov.f32 	%f633, 0f33A22168;
	fma.rn.f32 	%f634, %f630, %f633, %f632;
	mov.f32 	%f635, 0f27C234C5;
	fma.rn.f32 	%f1263, %f630, %f635, %f634;
	abs.f32 	%f636, %f1262;
	setp.leu.f32	%p42, %f636, 0f47CE4780;
	@%p42 bra 	BB0_41;

	mov.b32 	 %r20, %f1262;
	shr.u32 	%r21, %r20, 23;
	shl.b32 	%r164, %r20, 8;
	or.b32  	%r22, %r164, -2147483648;
	mov.u32 	%r396, 0;
	mov.u64 	%rd313, 0;
	mov.u64 	%rd312, %rd2;
	mov.u32 	%r397, %r396;

BB0_32:
	.pragma "nounroll";
	shl.b64 	%rd68, %rd313, 2;
	mov.u64 	%rd69, __cudart_i2opi_f;
	add.s64 	%rd70, %rd69, %rd68;
	ld.const.u32 	%r167, [%rd70];
	// inline asm
	{
	mad.lo.cc.u32   %r165, %r167, %r22, %r397;
	madc.hi.u32     %r397, %r167, %r22,  0;
	}
	// inline asm
	st.local.u32 	[%rd312], %r165;
	add.s32 	%r396, %r396, 1;
	cvt.s64.s32	%rd313, %r396;
	mul.wide.s32 	%rd71, %r396, 4;
	add.s64 	%rd312, %rd2, %rd71;
	setp.ne.s32	%p43, %r396, 6;
	@%p43 bra 	BB0_32;

	and.b32  	%r170, %r21, 255;
	add.s32 	%r171, %r170, -128;
	shr.u32 	%r172, %r171, 5;
	and.b32  	%r27, %r20, -2147483648;
	st.local.u32 	[%rd2+24], %r397;
	mov.u32 	%r173, 6;
	sub.s32 	%r174, %r173, %r172;
	mul.wide.s32 	%rd72, %r174, 4;
	add.s64 	%rd9, %rd2, %rd72;
	ld.local.u32 	%r398, [%rd9];
	ld.local.u32 	%r399, [%rd9+-4];
	and.b32  	%r30, %r21, 31;
	setp.eq.s32	%p44, %r30, 0;
	@%p44 bra 	BB0_35;

	mov.u32 	%r175, 32;
	sub.s32 	%r176, %r175, %r30;
	shr.u32 	%r177, %r399, %r176;
	shl.b32 	%r178, %r398, %r30;
	add.s32 	%r398, %r177, %r178;
	ld.local.u32 	%r179, [%rd9+-8];
	shr.u32 	%r180, %r179, %r176;
	shl.b32 	%r181, %r399, %r30;
	add.s32 	%r399, %r180, %r181;

BB0_35:
	shr.u32 	%r182, %r399, 30;
	shl.b32 	%r183, %r398, 2;
	add.s32 	%r400, %r182, %r183;
	shl.b32 	%r36, %r399, 2;
	shr.u32 	%r184, %r400, 31;
	shr.u32 	%r185, %r398, 30;
	add.s32 	%r37, %r184, %r185;
	setp.eq.s32	%p45, %r184, 0;
	@%p45 bra 	BB0_36;
	bra.uni 	BB0_37;

BB0_36:
	mov.u32 	%r401, %r27;
	mov.u32 	%r402, %r36;
	bra.uni 	BB0_38;

BB0_37:
	not.b32 	%r186, %r400;
	neg.s32 	%r402, %r36;
	setp.eq.s32	%p46, %r36, 0;
	selp.u32	%r187, 1, 0, %p46;
	add.s32 	%r400, %r187, %r186;
	xor.b32  	%r401, %r27, -2147483648;

BB0_38:
	clz.b32 	%r404, %r400;
	setp.eq.s32	%p47, %r404, 0;
	shl.b32 	%r188, %r400, %r404;
	mov.u32 	%r189, 32;
	sub.s32 	%r190, %r189, %r404;
	shr.u32 	%r191, %r402, %r190;
	add.s32 	%r192, %r191, %r188;
	selp.b32	%r45, %r400, %r192, %p47;
	mov.u32 	%r193, -921707870;
	mul.hi.u32 	%r403, %r45, %r193;
	setp.eq.s32	%p48, %r27, 0;
	neg.s32 	%r194, %r37;
	selp.b32	%r405, %r37, %r194, %p48;
	setp.lt.s32	%p49, %r403, 1;
	@%p49 bra 	BB0_40;

	mul.lo.s32 	%r195, %r45, -921707870;
	shr.u32 	%r196, %r195, 31;
	shl.b32 	%r197, %r403, 1;
	add.s32 	%r403, %r196, %r197;
	add.s32 	%r404, %r404, 1;

BB0_40:
	mov.u32 	%r198, 126;
	sub.s32 	%r199, %r198, %r404;
	shl.b32 	%r200, %r199, 23;
	add.s32 	%r201, %r403, 1;
	shr.u32 	%r202, %r201, 7;
	add.s32 	%r203, %r202, 1;
	shr.u32 	%r204, %r203, 1;
	add.s32 	%r205, %r204, %r200;
	or.b32  	%r206, %r205, %r401;
	mov.b32 	 %f1263, %r206;

BB0_41:
	mul.rn.f32 	%f188, %f1263, %f1263;
	add.s32 	%r53, %r405, 1;
	and.b32  	%r54, %r53, 1;
	setp.eq.s32	%p50, %r54, 0;
	@%p50 bra 	BB0_43;
	bra.uni 	BB0_42;

BB0_43:
	mov.f32 	%f639, 0f3C08839E;
	mov.f32 	%f640, 0fB94CA1F9;
	fma.rn.f32 	%f1264, %f640, %f188, %f639;
	bra.uni 	BB0_44;

BB0_42:
	mov.f32 	%f637, 0fBAB6061A;
	mov.f32 	%f638, 0f37CCF5CE;
	fma.rn.f32 	%f1264, %f638, %f188, %f637;

BB0_44:
	@%p50 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f644, 0fBE2AAAA3;
	fma.rn.f32 	%f645, %f1264, %f188, %f644;
	fma.rn.f32 	%f1265, %f645, %f188, %f625;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f641, 0f3D2AAAA5;
	fma.rn.f32 	%f642, %f1264, %f188, %f641;
	mov.f32 	%f643, 0fBF000000;
	fma.rn.f32 	%f1265, %f642, %f188, %f643;

BB0_47:
	fma.rn.f32 	%f1266, %f1265, %f1263, %f1263;
	@%p50 bra 	BB0_49;

	fma.rn.f32 	%f1266, %f1265, %f188, %f559;

BB0_49:
	and.b32  	%r207, %r53, 2;
	setp.eq.s32	%p53, %r207, 0;
	@%p53 bra 	BB0_51;

	mov.f32 	%f649, 0fBF800000;
	fma.rn.f32 	%f1266, %f1266, %f649, %f625;

BB0_51:
	@%p41 bra 	BB0_53;

	mul.rn.f32 	%f1268, %f1268, %f625;

BB0_53:
	mul.f32 	%f651, %f1268, 0f3F22F983;
	cvt.rni.s32.f32	%r415, %f651;
	cvt.rn.f32.s32	%f652, %r415;
	neg.f32 	%f653, %f652;
	fma.rn.f32 	%f655, %f653, %f631, %f1268;
	fma.rn.f32 	%f657, %f653, %f633, %f655;
	fma.rn.f32 	%f1269, %f653, %f635, %f657;
	abs.f32 	%f659, %f1268;
	setp.leu.f32	%p55, %f659, 0f47CE4780;
	@%p55 bra 	BB0_64;

	mov.b32 	 %r56, %f1268;
	shr.u32 	%r57, %r56, 23;
	shl.b32 	%r210, %r56, 8;
	or.b32  	%r58, %r210, -2147483648;
	mov.u32 	%r406, 0;
	mov.u64 	%rd314, %rd2;
	mov.u64 	%rd315, %rd26;
	mov.u32 	%r407, %r406;

BB0_55:
	.pragma "nounroll";
	shl.b64 	%rd74, %rd315, 2;
	mov.u64 	%rd75, __cudart_i2opi_f;
	add.s64 	%rd76, %rd75, %rd74;
	ld.const.u32 	%r213, [%rd76];
	// inline asm
	{
	mad.lo.cc.u32   %r211, %r213, %r58, %r407;
	madc.hi.u32     %r407, %r213, %r58,  0;
	}
	// inline asm
	st.local.u32 	[%rd314], %r211;
	add.s32 	%r406, %r406, 1;
	cvt.s64.s32	%rd315, %r406;
	mul.wide.s32 	%rd77, %r406, 4;
	add.s64 	%rd314, %rd2, %rd77;
	setp.ne.s32	%p56, %r406, 6;
	@%p56 bra 	BB0_55;

	and.b32  	%r216, %r57, 255;
	add.s32 	%r217, %r216, -128;
	shr.u32 	%r218, %r217, 5;
	and.b32  	%r63, %r56, -2147483648;
	st.local.u32 	[%rd2+24], %r407;
	mov.u32 	%r219, 6;
	sub.s32 	%r220, %r219, %r218;
	mul.wide.s32 	%rd78, %r220, 4;
	add.s64 	%rd15, %rd2, %rd78;
	ld.local.u32 	%r408, [%rd15];
	ld.local.u32 	%r409, [%rd15+-4];
	and.b32  	%r66, %r57, 31;
	setp.eq.s32	%p57, %r66, 0;
	@%p57 bra 	BB0_58;

	mov.u32 	%r221, 32;
	sub.s32 	%r222, %r221, %r66;
	shr.u32 	%r223, %r409, %r222;
	shl.b32 	%r224, %r408, %r66;
	add.s32 	%r408, %r223, %r224;
	ld.local.u32 	%r225, [%rd15+-8];
	shr.u32 	%r226, %r225, %r222;
	shl.b32 	%r227, %r409, %r66;
	add.s32 	%r409, %r226, %r227;

BB0_58:
	shr.u32 	%r228, %r409, 30;
	shl.b32 	%r229, %r408, 2;
	add.s32 	%r410, %r228, %r229;
	shl.b32 	%r72, %r409, 2;
	shr.u32 	%r230, %r410, 31;
	shr.u32 	%r231, %r408, 30;
	add.s32 	%r73, %r230, %r231;
	setp.eq.s32	%p58, %r230, 0;
	@%p58 bra 	BB0_59;
	bra.uni 	BB0_60;

BB0_59:
	mov.u32 	%r411, %r63;
	mov.u32 	%r412, %r72;
	bra.uni 	BB0_61;

BB0_60:
	not.b32 	%r232, %r410;
	neg.s32 	%r412, %r72;
	setp.eq.s32	%p59, %r72, 0;
	selp.u32	%r233, 1, 0, %p59;
	add.s32 	%r410, %r233, %r232;
	xor.b32  	%r411, %r63, -2147483648;

BB0_61:
	clz.b32 	%r414, %r410;
	setp.eq.s32	%p60, %r414, 0;
	shl.b32 	%r234, %r410, %r414;
	mov.u32 	%r235, 32;
	sub.s32 	%r236, %r235, %r414;
	shr.u32 	%r237, %r412, %r236;
	add.s32 	%r238, %r237, %r234;
	selp.b32	%r81, %r410, %r238, %p60;
	mov.u32 	%r239, -921707870;
	mul.hi.u32 	%r413, %r81, %r239;
	setp.eq.s32	%p61, %r63, 0;
	neg.s32 	%r240, %r73;
	selp.b32	%r415, %r73, %r240, %p61;
	setp.lt.s32	%p62, %r413, 1;
	@%p62 bra 	BB0_63;

	mul.lo.s32 	%r241, %r81, -921707870;
	shr.u32 	%r242, %r241, 31;
	shl.b32 	%r243, %r413, 1;
	add.s32 	%r413, %r242, %r243;
	add.s32 	%r414, %r414, 1;

BB0_63:
	mov.u32 	%r244, 126;
	sub.s32 	%r245, %r244, %r414;
	shl.b32 	%r246, %r245, 23;
	add.s32 	%r247, %r413, 1;
	shr.u32 	%r248, %r247, 7;
	add.s32 	%r249, %r248, 1;
	shr.u32 	%r250, %r249, 1;
	add.s32 	%r251, %r250, %r246;
	or.b32  	%r252, %r251, %r411;
	mov.b32 	 %f1269, %r252;

BB0_64:
	mul.rn.f32 	%f205, %f1269, %f1269;
	and.b32  	%r89, %r415, 1;
	setp.eq.s32	%p63, %r89, 0;
	@%p63 bra 	BB0_66;
	bra.uni 	BB0_65;

BB0_66:
	mov.f32 	%f662, 0f3C08839E;
	mov.f32 	%f663, 0fB94CA1F9;
	fma.rn.f32 	%f1270, %f663, %f205, %f662;
	bra.uni 	BB0_67;

BB0_65:
	mov.f32 	%f660, 0fBAB6061A;
	mov.f32 	%f661, 0f37CCF5CE;
	fma.rn.f32 	%f1270, %f661, %f205, %f660;

BB0_67:
	@%p63 bra 	BB0_69;
	bra.uni 	BB0_68;

BB0_69:
	mov.f32 	%f667, 0fBE2AAAA3;
	fma.rn.f32 	%f668, %f1270, %f205, %f667;
	fma.rn.f32 	%f1271, %f668, %f205, %f625;
	bra.uni 	BB0_70;

BB0_68:
	mov.f32 	%f664, 0f3D2AAAA5;
	fma.rn.f32 	%f665, %f1270, %f205, %f664;
	mov.f32 	%f666, 0fBF000000;
	fma.rn.f32 	%f1271, %f665, %f205, %f666;

BB0_70:
	fma.rn.f32 	%f1272, %f1271, %f1269, %f1269;
	@%p63 bra 	BB0_72;

	fma.rn.f32 	%f1272, %f1271, %f205, %f559;

BB0_72:
	and.b32  	%r253, %r415, 2;
	setp.eq.s32	%p66, %r253, 0;
	@%p66 bra 	BB0_74;

	mov.f32 	%f672, 0fBF800000;
	fma.rn.f32 	%f1272, %f1272, %f672, %f625;

BB0_74:
	mul.f32 	%f681, %f180, %f1266;
	mul.f32 	%f682, %f180, %f1272;
	mul.f32 	%f683, %f137, %f682;
	mul.f32 	%f684, %f138, %f682;
	mul.f32 	%f685, %f139, %f682;
	fma.rn.f32 	%f686, %f146, %f681, %f683;
	fma.rn.f32 	%f687, %f145, %f681, %f684;
	fma.rn.f32 	%f688, %f144, %f681, %f685;
	fma.rn.f32 	%f676, %f1162, %f179, %f686;
	fma.rn.f32 	%f677, %f1163, %f179, %f687;
	fma.rn.f32 	%f678, %f1164, %f179, %f688;
	mov.u32 	%r255, 0;
	st.local.u32 	[%rd3+8], %r255;
	st.local.u32 	[%rd3+4], %r255;
	st.local.u32 	[%rd3], %r255;
	ld.global.u32 	%r254, [root];
	mov.f32 	%f680, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r254, %f12, %f13, %f14, %f676, %f677, %f678, %r255, %f163, %f680, %rd66, %r118);
	// inline asm
	ld.local.f32 	%f689, [%rd3];
	max.f32 	%f691, %f689, %f625;
	ld.local.f32 	%f692, [%rd3+4];
	max.f32 	%f693, %f692, %f625;
	ld.local.f32 	%f694, [%rd3+8];
	max.f32 	%f695, %f694, %f625;
	fma.rn.f32 	%f1255, %f676, %f691, %f1255;
	fma.rn.f32 	%f1254, %f676, %f693, %f1254;
	fma.rn.f32 	%f1253, %f676, %f695, %f1253;
	fma.rn.f32 	%f1258, %f677, %f691, %f1258;
	fma.rn.f32 	%f1257, %f677, %f693, %f1257;
	fma.rn.f32 	%f1256, %f677, %f695, %f1256;
	fma.rn.f32 	%f1261, %f678, %f691, %f1261;
	fma.rn.f32 	%f1260, %f678, %f693, %f1260;
	fma.rn.f32 	%f1259, %f678, %f695, %f1259;
	add.f32 	%f1252, %f1252, %f691;
	add.f32 	%f1251, %f1251, %f693;
	add.f32 	%f1250, %f1250, %f695;
	mul.f32 	%f696, %f1163, %f677;
	fma.rn.f32 	%f697, %f1162, %f676, %f696;
	fma.rn.f32 	%f698, %f1164, %f678, %f697;
	cvt.sat.f32.f32	%f699, %f698;
	fma.rn.f32 	%f1249, %f691, %f699, %f1249;
	fma.rn.f32 	%f1248, %f693, %f699, %f1248;
	fma.rn.f32 	%f1247, %f695, %f699, %f1247;
	add.s32 	%r394, %r394, 1;
	setp.lt.s32	%p67, %r394, %r2;
	@%p67 bra 	BB0_28;

	add.s32 	%r392, %r392, 1;
	setp.lt.s32	%p68, %r392, %r2;
	@%p68 bra 	BB0_27;

BB0_76:
	mul.lo.s32 	%r257, %r2, %r2;
	cvt.rn.f32.s32	%f700, %r257;
	rcp.rn.f32 	%f701, %f700;
	mul.f32 	%f702, %f1249, %f701;
	mul.f32 	%f703, %f1248, %f701;
	mul.f32 	%f704, %f1247, %f701;
	div.rn.f32 	%f1304, %f576, %f700;
	mul.f32 	%f1298, %f1252, %f701;
	mul.f32 	%f1299, %f1251, %f701;
	mul.f32 	%f1300, %f1250, %f701;
	mul.f32 	%f1295, %f1255, %f701;
	mul.f32 	%f1296, %f1254, %f701;
	mul.f32 	%f1297, %f1253, %f701;
	mul.f32 	%f1292, %f1258, %f701;
	mul.f32 	%f1293, %f1257, %f701;
	mul.f32 	%f1294, %f1256, %f701;
	mul.f32 	%f1289, %f1261, %f701;
	mul.f32 	%f1290, %f1260, %f701;
	mul.f32 	%f1291, %f1259, %f701;
	fma.rn.f32 	%f1301, %f1249, %f701, %f702;
	fma.rn.f32 	%f1302, %f1248, %f701, %f703;
	fma.rn.f32 	%f1303, %f1247, %f701, %f704;

BB0_77:
	ld.global.u32 	%r417, [imageEnabled];
	and.b32  	%r258, %r417, 8;
	setp.eq.s32	%p69, %r258, 0;
	@%p69 bra 	BB0_90;

	cvt.u64.u32	%rd82, %r4;
	cvt.u64.u32	%rd83, %r5;
	mov.u64 	%rd86, image_Mask;
	cvta.global.u64 	%rd81, %rd86;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r102, %r102, %rd82, %rd83, %rd26, %rd26);
	// inline asm
	mov.f32 	%f708, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f709, %f708;
	fma.rn.f32 	%f710, %f709, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f279, %f710;
	abs.f32 	%f280, %f1304;
	setp.lt.f32	%p70, %f280, 0f00800000;
	mul.f32 	%f711, %f280, 0f4B800000;
	selp.f32	%f712, 0fC3170000, 0fC2FE0000, %p70;
	selp.f32	%f713, %f711, %f280, %p70;
	mov.b32 	 %r261, %f713;
	and.b32  	%r262, %r261, 8388607;
	or.b32  	%r263, %r262, 1065353216;
	mov.b32 	 %f714, %r263;
	shr.u32 	%r264, %r261, 23;
	cvt.rn.f32.u32	%f715, %r264;
	add.f32 	%f716, %f712, %f715;
	setp.gt.f32	%p71, %f714, 0f3FB504F3;
	mul.f32 	%f717, %f714, 0f3F000000;
	add.f32 	%f718, %f716, 0f3F800000;
	selp.f32	%f719, %f717, %f714, %p71;
	selp.f32	%f720, %f718, %f716, %p71;
	add.f32 	%f721, %f719, 0fBF800000;
	add.f32 	%f707, %f719, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// inline asm
	add.f32 	%f722, %f721, %f721;
	mul.f32 	%f723, %f706, %f722;
	mul.f32 	%f724, %f723, %f723;
	mov.f32 	%f725, 0f3C4CAF63;
	mov.f32 	%f726, 0f3B18F0FE;
	fma.rn.f32 	%f727, %f726, %f724, %f725;
	mov.f32 	%f728, 0f3DAAAABD;
	fma.rn.f32 	%f729, %f727, %f724, %f728;
	mul.rn.f32 	%f730, %f729, %f724;
	mul.rn.f32 	%f731, %f730, %f723;
	sub.f32 	%f732, %f721, %f723;
	neg.f32 	%f733, %f723;
	add.f32 	%f734, %f732, %f732;
	fma.rn.f32 	%f735, %f733, %f721, %f734;
	mul.rn.f32 	%f736, %f706, %f735;
	add.f32 	%f737, %f731, %f723;
	sub.f32 	%f738, %f723, %f737;
	add.f32 	%f739, %f731, %f738;
	add.f32 	%f740, %f736, %f739;
	add.f32 	%f741, %f737, %f740;
	sub.f32 	%f742, %f737, %f741;
	add.f32 	%f743, %f740, %f742;
	mov.f32 	%f744, 0f3F317200;
	mul.rn.f32 	%f745, %f720, %f744;
	mov.f32 	%f746, 0f35BFBE8E;
	mul.rn.f32 	%f747, %f720, %f746;
	add.f32 	%f748, %f745, %f741;
	sub.f32 	%f749, %f745, %f748;
	add.f32 	%f750, %f741, %f749;
	add.f32 	%f751, %f743, %f750;
	add.f32 	%f752, %f747, %f751;
	add.f32 	%f753, %f748, %f752;
	sub.f32 	%f754, %f748, %f753;
	add.f32 	%f755, %f752, %f754;
	mov.f32 	%f756, 0f3EE8BA2E;
	mul.rn.f32 	%f757, %f756, %f753;
	neg.f32 	%f758, %f757;
	fma.rn.f32 	%f759, %f756, %f753, %f758;
	fma.rn.f32 	%f760, %f756, %f755, %f759;
	mov.f32 	%f761, 0f00000000;
	fma.rn.f32 	%f762, %f761, %f753, %f760;
	add.rn.f32 	%f763, %f757, %f762;
	neg.f32 	%f764, %f763;
	add.rn.f32 	%f765, %f757, %f764;
	add.rn.f32 	%f766, %f765, %f762;
	mov.b32 	 %r265, %f763;
	setp.eq.s32	%p72, %r265, 1118925336;
	add.s32 	%r266, %r265, -1;
	mov.b32 	 %f767, %r266;
	add.f32 	%f768, %f766, 0f37000000;
	selp.f32	%f769, %f767, %f763, %p72;
	selp.f32	%f281, %f768, %f766, %p72;
	mul.f32 	%f770, %f769, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f771, %f770;
	mov.f32 	%f772, 0fBF317200;
	fma.rn.f32 	%f773, %f771, %f772, %f769;
	mov.f32 	%f774, 0fB5BFBE8E;
	fma.rn.f32 	%f775, %f771, %f774, %f773;
	mul.f32 	%f776, %f775, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f777, %f776;
	add.f32 	%f778, %f771, 0f00000000;
	ex2.approx.f32 	%f779, %f778;
	mul.f32 	%f780, %f777, %f779;
	setp.lt.f32	%p73, %f769, 0fC2D20000;
	selp.f32	%f781, 0f00000000, %f780, %p73;
	setp.gt.f32	%p74, %f769, 0f42D20000;
	selp.f32	%f1305, 0f7F800000, %f781, %p74;
	setp.eq.f32	%p75, %f1305, 0f7F800000;
	@%p75 bra 	BB0_80;

	fma.rn.f32 	%f1305, %f1305, %f281, %f1305;

BB0_80:
	setp.lt.f32	%p76, %f1304, 0f00000000;
	setp.eq.f32	%p77, %f279, 0f3F800000;
	and.pred  	%p3, %p76, %p77;
	mov.b32 	 %r267, %f1305;
	xor.b32  	%r268, %r267, -2147483648;
	mov.b32 	 %f782, %r268;
	selp.f32	%f1307, %f782, %f1305, %p3;
	setp.eq.f32	%p78, %f1304, 0f00000000;
	@%p78 bra 	BB0_83;
	bra.uni 	BB0_81;

BB0_83:
	add.f32 	%f785, %f1304, %f1304;
	selp.f32	%f1307, %f785, 0f00000000, %p77;
	bra.uni 	BB0_84;

BB0_148:
	mov.u64 	%rd227, image_HDR;
	cvta.global.u64 	%rd222, %rd227;
	mov.u32 	%r354, 8;
	mov.u64 	%rd226, 0;
	// inline asm
	call (%rd221), _rt_buffer_get_64, (%rd222, %r102, %r354, %rd19, %rd20, %rd226, %rd226);
	// inline asm
	mov.f32 	%f1124, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f1124;}

	// inline asm
	mov.u16 	%rs105, 0;
	st.v4.u16 	[%rd221], {%rs104, %rs104, %rs104, %rs105};

BB0_149:
	ld.global.u32 	%r355, [additive];
	setp.eq.s32	%p145, %r355, 0;
	@%p145 bra 	BB0_151;

	mov.u64 	%rd240, image_RNM0;
	cvta.global.u64 	%rd229, %rd240;
	mov.u32 	%r359, 8;
	mov.u64 	%rd239, 0;
	// inline asm
	call (%rd228), _rt_buffer_get_64, (%rd229, %r102, %r359, %rd19, %rd20, %rd239, %rd239);
	// inline asm
	ld.v4.u16 	{%rs112, %rs113, %rs114, %rs115}, [%rd228];
	// inline asm
	{  cvt.f32.f16 %f1125, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1126, %rs113;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1127, %rs114;}

	// inline asm
	// inline asm
	call (%rd234), _rt_buffer_get_64, (%rd229, %r102, %r359, %rd19, %rd20, %rd239, %rd239);
	// inline asm
	add.f32 	%f1128, %f1125, 0f00000000;
	add.f32 	%f1129, %f1126, 0f00000000;
	add.f32 	%f1130, %f1127, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs111, %f1130;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1129;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1128;}

	// inline asm
	mov.u16 	%rs116, 0;
	st.v4.u16 	[%rd234], {%rs109, %rs110, %rs111, %rs116};
	bra.uni 	BB0_152;

BB0_151:
	mov.u64 	%rd247, image_RNM0;
	cvta.global.u64 	%rd242, %rd247;
	mov.u32 	%r361, 8;
	mov.u64 	%rd246, 0;
	// inline asm
	call (%rd241), _rt_buffer_get_64, (%rd242, %r102, %r361, %rd19, %rd20, %rd246, %rd246);
	// inline asm
	mov.f32 	%f1131, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f1131;}

	// inline asm
	mov.u16 	%rs118, 0;
	st.v4.u16 	[%rd241], {%rs117, %rs117, %rs117, %rs118};

BB0_152:
	ld.global.u32 	%r362, [additive];
	setp.eq.s32	%p146, %r362, 0;
	@%p146 bra 	BB0_154;

	mov.u64 	%rd260, image_RNM1;
	cvta.global.u64 	%rd249, %rd260;
	mov.u32 	%r366, 8;
	mov.u64 	%rd259, 0;
	// inline asm
	call (%rd248), _rt_buffer_get_64, (%rd249, %r102, %r366, %rd19, %rd20, %rd259, %rd259);
	// inline asm
	ld.v4.u16 	{%rs125, %rs126, %rs127, %rs128}, [%rd248];
	// inline asm
	{  cvt.f32.f16 %f1132, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1133, %rs126;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1134, %rs127;}

	// inline asm
	// inline asm
	call (%rd254), _rt_buffer_get_64, (%rd249, %r102, %r366, %rd19, %rd20, %rd259, %rd259);
	// inline asm
	add.f32 	%f1135, %f1132, 0f00000000;
	add.f32 	%f1136, %f1133, 0f00000000;
	add.f32 	%f1137, %f1134, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs124, %f1137;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f1136;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f1135;}

	// inline asm
	mov.u16 	%rs129, 0;
	st.v4.u16 	[%rd254], {%rs122, %rs123, %rs124, %rs129};
	bra.uni 	BB0_155;

BB0_154:
	mov.u64 	%rd267, image_RNM1;
	cvta.global.u64 	%rd262, %rd267;
	mov.u32 	%r368, 8;
	mov.u64 	%rd266, 0;
	// inline asm
	call (%rd261), _rt_buffer_get_64, (%rd262, %r102, %r368, %rd19, %rd20, %rd266, %rd266);
	// inline asm
	mov.f32 	%f1138, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs130, %f1138;}

	// inline asm
	mov.u16 	%rs131, 0;
	st.v4.u16 	[%rd261], {%rs130, %rs130, %rs130, %rs131};

BB0_155:
	ld.global.u32 	%r369, [additive];
	setp.eq.s32	%p147, %r369, 0;
	@%p147 bra 	BB0_157;

	mov.u64 	%rd280, image_RNM2;
	cvta.global.u64 	%rd269, %rd280;
	mov.u32 	%r373, 8;
	mov.u64 	%rd279, 0;
	// inline asm
	call (%rd268), _rt_buffer_get_64, (%rd269, %r102, %r373, %rd19, %rd20, %rd279, %rd279);
	// inline asm
	ld.v4.u16 	{%rs138, %rs139, %rs140, %rs141}, [%rd268];
	// inline asm
	{  cvt.f32.f16 %f1139, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1140, %rs139;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1141, %rs140;}

	// inline asm
	// inline asm
	call (%rd274), _rt_buffer_get_64, (%rd269, %r102, %r373, %rd19, %rd20, %rd279, %rd279);
	// inline asm
	add.f32 	%f1142, %f1139, 0f00000000;
	add.f32 	%f1143, %f1140, 0f00000000;
	add.f32 	%f1144, %f1141, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs137, %f1144;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f1143;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f1142;}

	// inline asm
	mov.u16 	%rs142, 0;
	st.v4.u16 	[%rd274], {%rs135, %rs136, %rs137, %rs142};
	bra.uni 	BB0_158;

BB0_157:
	mov.u64 	%rd287, image_RNM2;
	cvta.global.u64 	%rd282, %rd287;
	mov.u32 	%r375, 8;
	mov.u64 	%rd286, 0;
	// inline asm
	call (%rd281), _rt_buffer_get_64, (%rd282, %r102, %r375, %rd19, %rd20, %rd286, %rd286);
	// inline asm
	mov.f32 	%f1145, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs143, %f1145;}

	// inline asm
	mov.u16 	%rs144, 0;
	st.v4.u16 	[%rd281], {%rs143, %rs143, %rs143, %rs144};

BB0_158:
	ld.global.u32 	%r376, [additive];
	setp.eq.s32	%p148, %r376, 0;
	@%p148 bra 	BB0_160;

	mov.u64 	%rd300, image_RNM3;
	cvta.global.u64 	%rd289, %rd300;
	mov.u32 	%r380, 8;
	mov.u64 	%rd299, 0;
	// inline asm
	call (%rd288), _rt_buffer_get_64, (%rd289, %r102, %r380, %rd19, %rd20, %rd299, %rd299);
	// inline asm
	ld.v4.u16 	{%rs151, %rs152, %rs153, %rs154}, [%rd288];
	// inline asm
	{  cvt.f32.f16 %f1146, %rs151;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1147, %rs152;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1148, %rs153;}

	// inline asm
	// inline asm
	call (%rd294), _rt_buffer_get_64, (%rd289, %r102, %r380, %rd19, %rd20, %rd299, %rd299);
	// inline asm
	add.f32 	%f1149, %f1146, 0f00000000;
	add.f32 	%f1150, %f1147, 0f00000000;
	add.f32 	%f1151, %f1148, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs150, %f1151;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs149, %f1150;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f1149;}

	// inline asm
	mov.u16 	%rs155, 0;
	st.v4.u16 	[%rd294], {%rs148, %rs149, %rs150, %rs155};
	bra.uni 	BB0_161;

BB0_160:
	mov.u64 	%rd307, image_RNM3;
	cvta.global.u64 	%rd302, %rd307;
	mov.u32 	%r382, 8;
	mov.u64 	%rd306, 0;
	// inline asm
	call (%rd301), _rt_buffer_get_64, (%rd302, %r102, %r382, %rd19, %rd20, %rd306, %rd306);
	// inline asm
	mov.f32 	%f1152, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs156, %f1152;}

	// inline asm
	mov.u16 	%rs157, 0;
	st.v4.u16 	[%rd301], {%rs156, %rs156, %rs156, %rs157};
	bra.uni 	BB0_161;

BB0_81:
	setp.geu.f32	%p79, %f1304, 0f00000000;
	@%p79 bra 	BB0_84;

	cvt.rzi.f32.f32	%f784, %f756;
	setp.neu.f32	%p80, %f784, 0f3EE8BA2E;
	selp.f32	%f1307, 0f7FFFFFFF, %f1307, %p80;

BB0_84:
	add.f32 	%f786, %f280, 0f3EE8BA2E;
	mov.b32 	 %r269, %f786;
	setp.lt.s32	%p82, %r269, 2139095040;
	@%p82 bra 	BB0_89;

	setp.gtu.f32	%p83, %f280, 0f7F800000;
	@%p83 bra 	BB0_88;
	bra.uni 	BB0_86;

BB0_88:
	add.f32 	%f1307, %f1304, 0f3EE8BA2E;
	bra.uni 	BB0_89;

BB0_86:
	setp.neu.f32	%p84, %f280, 0f7F800000;
	@%p84 bra 	BB0_89;

	selp.f32	%f1307, 0fFF800000, 0f7F800000, %p3;

BB0_89:
	mul.f32 	%f787, %f1307, 0f437F0000;
	setp.eq.f32	%p85, %f1304, 0f3F800000;
	selp.f32	%f788, 0f437F0000, %f787, %p85;
	cvt.rzi.u32.f32	%r270, %f788;
	cvt.u16.u32	%rs14, %r270;
	mov.u16 	%rs15, 255;
	st.v2.u8 	[%rd80], {%rs14, %rs15};
	ld.global.u32 	%r417, [imageEnabled];

BB0_90:
	ld.global.f32 	%f789, [lightColor];
	mul.f32 	%f292, %f1301, %f789;
	ld.global.f32 	%f790, [lightColor+4];
	mul.f32 	%f293, %f1302, %f790;
	ld.global.f32 	%f791, [lightColor+8];
	mul.f32 	%f294, %f1303, %f791;
	and.b32  	%r271, %r417, 1;
	setp.eq.b32	%p86, %r271, 1;
	@!%p86 bra 	BB0_125;
	bra.uni 	BB0_91;

BB0_91:
	mov.f32 	%f794, 0f3E666666;
	cvt.rzi.f32.f32	%f795, %f794;
	fma.rn.f32 	%f796, %f795, 0fC0000000, 0f3EE66666;
	abs.f32 	%f295, %f796;
	abs.f32 	%f296, %f292;
	setp.lt.f32	%p87, %f296, 0f00800000;
	mul.f32 	%f797, %f296, 0f4B800000;
	selp.f32	%f798, 0fC3170000, 0fC2FE0000, %p87;
	selp.f32	%f799, %f797, %f296, %p87;
	mov.b32 	 %r272, %f799;
	and.b32  	%r273, %r272, 8388607;
	or.b32  	%r274, %r273, 1065353216;
	mov.b32 	 %f800, %r274;
	shr.u32 	%r275, %r272, 23;
	cvt.rn.f32.u32	%f801, %r275;
	add.f32 	%f802, %f798, %f801;
	setp.gt.f32	%p88, %f800, 0f3FB504F3;
	mul.f32 	%f803, %f800, 0f3F000000;
	add.f32 	%f804, %f802, 0f3F800000;
	selp.f32	%f805, %f803, %f800, %p88;
	selp.f32	%f806, %f804, %f802, %p88;
	add.f32 	%f807, %f805, 0fBF800000;
	add.f32 	%f793, %f805, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f792,%f793;
	// inline asm
	add.f32 	%f808, %f807, %f807;
	mul.f32 	%f809, %f792, %f808;
	mul.f32 	%f810, %f809, %f809;
	mov.f32 	%f811, 0f3C4CAF63;
	mov.f32 	%f812, 0f3B18F0FE;
	fma.rn.f32 	%f813, %f812, %f810, %f811;
	mov.f32 	%f814, 0f3DAAAABD;
	fma.rn.f32 	%f815, %f813, %f810, %f814;
	mul.rn.f32 	%f816, %f815, %f810;
	mul.rn.f32 	%f817, %f816, %f809;
	sub.f32 	%f818, %f807, %f809;
	neg.f32 	%f819, %f809;
	add.f32 	%f820, %f818, %f818;
	fma.rn.f32 	%f821, %f819, %f807, %f820;
	mul.rn.f32 	%f822, %f792, %f821;
	add.f32 	%f823, %f817, %f809;
	sub.f32 	%f824, %f809, %f823;
	add.f32 	%f825, %f817, %f824;
	add.f32 	%f826, %f822, %f825;
	add.f32 	%f827, %f823, %f826;
	sub.f32 	%f828, %f823, %f827;
	add.f32 	%f829, %f826, %f828;
	mov.f32 	%f830, 0f3F317200;
	mul.rn.f32 	%f831, %f806, %f830;
	mov.f32 	%f832, 0f35BFBE8E;
	mul.rn.f32 	%f833, %f806, %f832;
	add.f32 	%f834, %f831, %f827;
	sub.f32 	%f835, %f831, %f834;
	add.f32 	%f836, %f827, %f835;
	add.f32 	%f837, %f829, %f836;
	add.f32 	%f838, %f833, %f837;
	add.f32 	%f839, %f834, %f838;
	sub.f32 	%f840, %f834, %f839;
	add.f32 	%f841, %f838, %f840;
	mov.f32 	%f842, 0f3EE66666;
	mul.rn.f32 	%f843, %f842, %f839;
	neg.f32 	%f844, %f843;
	fma.rn.f32 	%f845, %f842, %f839, %f844;
	fma.rn.f32 	%f846, %f842, %f841, %f845;
	mov.f32 	%f847, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f839, %f846;
	add.rn.f32 	%f849, %f843, %f848;
	neg.f32 	%f850, %f849;
	add.rn.f32 	%f851, %f843, %f850;
	add.rn.f32 	%f852, %f851, %f848;
	mov.b32 	 %r276, %f849;
	setp.eq.s32	%p89, %r276, 1118925336;
	add.s32 	%r277, %r276, -1;
	mov.b32 	 %f853, %r277;
	add.f32 	%f854, %f852, 0f37000000;
	selp.f32	%f855, %f853, %f849, %p89;
	selp.f32	%f297, %f854, %f852, %p89;
	mul.f32 	%f856, %f855, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f857, %f856;
	mov.f32 	%f858, 0fBF317200;
	fma.rn.f32 	%f859, %f857, %f858, %f855;
	mov.f32 	%f860, 0fB5BFBE8E;
	fma.rn.f32 	%f861, %f857, %f860, %f859;
	mul.f32 	%f862, %f861, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f863, %f862;
	add.f32 	%f864, %f857, 0f00000000;
	ex2.approx.f32 	%f865, %f864;
	mul.f32 	%f866, %f863, %f865;
	setp.lt.f32	%p90, %f855, 0fC2D20000;
	selp.f32	%f867, 0f00000000, %f866, %p90;
	setp.gt.f32	%p91, %f855, 0f42D20000;
	selp.f32	%f1308, 0f7F800000, %f867, %p91;
	setp.eq.f32	%p92, %f1308, 0f7F800000;
	@%p92 bra 	BB0_93;

	fma.rn.f32 	%f1308, %f1308, %f297, %f1308;

BB0_93:
	setp.lt.f32	%p93, %f292, 0f00000000;
	setp.eq.f32	%p94, %f295, 0f3F800000;
	and.pred  	%p4, %p93, %p94;
	mov.b32 	 %r278, %f1308;
	xor.b32  	%r279, %r278, -2147483648;
	mov.b32 	 %f868, %r279;
	selp.f32	%f1310, %f868, %f1308, %p4;
	setp.eq.f32	%p95, %f292, 0f00000000;
	@%p95 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f871, %f292, %f292;
	selp.f32	%f1310, %f871, 0f00000000, %p94;
	bra.uni 	BB0_97;

BB0_94:
	setp.geu.f32	%p96, %f292, 0f00000000;
	@%p96 bra 	BB0_97;

	cvt.rzi.f32.f32	%f870, %f842;
	setp.neu.f32	%p97, %f870, 0f3EE66666;
	selp.f32	%f1310, 0f7FFFFFFF, %f1310, %p97;

BB0_97:
	add.f32 	%f872, %f296, 0f3EE66666;
	mov.b32 	 %r280, %f872;
	setp.lt.s32	%p99, %r280, 2139095040;
	@%p99 bra 	BB0_102;

	setp.gtu.f32	%p100, %f296, 0f7F800000;
	@%p100 bra 	BB0_101;
	bra.uni 	BB0_99;

BB0_101:
	add.f32 	%f1310, %f292, 0f3EE66666;
	bra.uni 	BB0_102;

BB0_99:
	setp.neu.f32	%p101, %f296, 0f7F800000;
	@%p101 bra 	BB0_102;

	selp.f32	%f1310, 0fFF800000, 0f7F800000, %p4;

BB0_102:
	setp.eq.f32	%p102, %f292, 0f3F800000;
	selp.f32	%f308, 0f3F800000, %f1310, %p102;
	abs.f32 	%f309, %f293;
	setp.lt.f32	%p103, %f309, 0f00800000;
	mul.f32 	%f875, %f309, 0f4B800000;
	selp.f32	%f876, 0fC3170000, 0fC2FE0000, %p103;
	selp.f32	%f877, %f875, %f309, %p103;
	mov.b32 	 %r281, %f877;
	and.b32  	%r282, %r281, 8388607;
	or.b32  	%r283, %r282, 1065353216;
	mov.b32 	 %f878, %r283;
	shr.u32 	%r284, %r281, 23;
	cvt.rn.f32.u32	%f879, %r284;
	add.f32 	%f880, %f876, %f879;
	setp.gt.f32	%p104, %f878, 0f3FB504F3;
	mul.f32 	%f881, %f878, 0f3F000000;
	add.f32 	%f882, %f880, 0f3F800000;
	selp.f32	%f883, %f881, %f878, %p104;
	selp.f32	%f884, %f882, %f880, %p104;
	add.f32 	%f885, %f883, 0fBF800000;
	add.f32 	%f874, %f883, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f873,%f874;
	// inline asm
	add.f32 	%f886, %f885, %f885;
	mul.f32 	%f887, %f873, %f886;
	mul.f32 	%f888, %f887, %f887;
	fma.rn.f32 	%f891, %f812, %f888, %f811;
	fma.rn.f32 	%f893, %f891, %f888, %f814;
	mul.rn.f32 	%f894, %f893, %f888;
	mul.rn.f32 	%f895, %f894, %f887;
	sub.f32 	%f896, %f885, %f887;
	neg.f32 	%f897, %f887;
	add.f32 	%f898, %f896, %f896;
	fma.rn.f32 	%f899, %f897, %f885, %f898;
	mul.rn.f32 	%f900, %f873, %f899;
	add.f32 	%f901, %f895, %f887;
	sub.f32 	%f902, %f887, %f901;
	add.f32 	%f903, %f895, %f902;
	add.f32 	%f904, %f900, %f903;
	add.f32 	%f905, %f901, %f904;
	sub.f32 	%f906, %f901, %f905;
	add.f32 	%f907, %f904, %f906;
	mul.rn.f32 	%f909, %f884, %f830;
	mul.rn.f32 	%f911, %f884, %f832;
	add.f32 	%f912, %f909, %f905;
	sub.f32 	%f913, %f909, %f912;
	add.f32 	%f914, %f905, %f913;
	add.f32 	%f915, %f907, %f914;
	add.f32 	%f916, %f911, %f915;
	add.f32 	%f917, %f912, %f916;
	sub.f32 	%f918, %f912, %f917;
	add.f32 	%f919, %f916, %f918;
	mul.rn.f32 	%f921, %f842, %f917;
	neg.f32 	%f922, %f921;
	fma.rn.f32 	%f923, %f842, %f917, %f922;
	fma.rn.f32 	%f924, %f842, %f919, %f923;
	fma.rn.f32 	%f926, %f847, %f917, %f924;
	add.rn.f32 	%f927, %f921, %f926;
	neg.f32 	%f928, %f927;
	add.rn.f32 	%f929, %f921, %f928;
	add.rn.f32 	%f930, %f929, %f926;
	mov.b32 	 %r285, %f927;
	setp.eq.s32	%p105, %r285, 1118925336;
	add.s32 	%r286, %r285, -1;
	mov.b32 	 %f931, %r286;
	add.f32 	%f932, %f930, 0f37000000;
	selp.f32	%f933, %f931, %f927, %p105;
	selp.f32	%f310, %f932, %f930, %p105;
	mul.f32 	%f934, %f933, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f935, %f934;
	fma.rn.f32 	%f937, %f935, %f858, %f933;
	fma.rn.f32 	%f939, %f935, %f860, %f937;
	mul.f32 	%f940, %f939, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f941, %f940;
	add.f32 	%f942, %f935, 0f00000000;
	ex2.approx.f32 	%f943, %f942;
	mul.f32 	%f944, %f941, %f943;
	setp.lt.f32	%p106, %f933, 0fC2D20000;
	selp.f32	%f945, 0f00000000, %f944, %p106;
	setp.gt.f32	%p107, %f933, 0f42D20000;
	selp.f32	%f1311, 0f7F800000, %f945, %p107;
	setp.eq.f32	%p108, %f1311, 0f7F800000;
	@%p108 bra 	BB0_104;

	fma.rn.f32 	%f1311, %f1311, %f310, %f1311;

BB0_104:
	setp.lt.f32	%p109, %f293, 0f00000000;
	and.pred  	%p5, %p109, %p94;
	mov.b32 	 %r287, %f1311;
	xor.b32  	%r288, %r287, -2147483648;
	mov.b32 	 %f946, %r288;
	selp.f32	%f1313, %f946, %f1311, %p5;
	setp.eq.f32	%p111, %f293, 0f00000000;
	@%p111 bra 	BB0_107;
	bra.uni 	BB0_105;

BB0_107:
	add.f32 	%f949, %f293, %f293;
	selp.f32	%f1313, %f949, 0f00000000, %p94;
	bra.uni 	BB0_108;

BB0_105:
	setp.geu.f32	%p112, %f293, 0f00000000;
	@%p112 bra 	BB0_108;

	cvt.rzi.f32.f32	%f948, %f842;
	setp.neu.f32	%p113, %f948, 0f3EE66666;
	selp.f32	%f1313, 0f7FFFFFFF, %f1313, %p113;

BB0_108:
	add.f32 	%f950, %f309, 0f3EE66666;
	mov.b32 	 %r289, %f950;
	setp.lt.s32	%p115, %r289, 2139095040;
	@%p115 bra 	BB0_113;

	setp.gtu.f32	%p116, %f309, 0f7F800000;
	@%p116 bra 	BB0_112;
	bra.uni 	BB0_110;

BB0_112:
	add.f32 	%f1313, %f293, 0f3EE66666;
	bra.uni 	BB0_113;

BB0_110:
	setp.neu.f32	%p117, %f309, 0f7F800000;
	@%p117 bra 	BB0_113;

	selp.f32	%f1313, 0fFF800000, 0f7F800000, %p5;

BB0_113:
	setp.eq.f32	%p118, %f293, 0f3F800000;
	selp.f32	%f321, 0f3F800000, %f1313, %p118;
	abs.f32 	%f322, %f294;
	setp.lt.f32	%p119, %f322, 0f00800000;
	mul.f32 	%f953, %f322, 0f4B800000;
	selp.f32	%f954, 0fC3170000, 0fC2FE0000, %p119;
	selp.f32	%f955, %f953, %f322, %p119;
	mov.b32 	 %r290, %f955;
	and.b32  	%r291, %r290, 8388607;
	or.b32  	%r292, %r291, 1065353216;
	mov.b32 	 %f956, %r292;
	shr.u32 	%r293, %r290, 23;
	cvt.rn.f32.u32	%f957, %r293;
	add.f32 	%f958, %f954, %f957;
	setp.gt.f32	%p120, %f956, 0f3FB504F3;
	mul.f32 	%f959, %f956, 0f3F000000;
	add.f32 	%f960, %f958, 0f3F800000;
	selp.f32	%f961, %f959, %f956, %p120;
	selp.f32	%f962, %f960, %f958, %p120;
	add.f32 	%f963, %f961, 0fBF800000;
	add.f32 	%f952, %f961, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f951,%f952;
	// inline asm
	add.f32 	%f964, %f963, %f963;
	mul.f32 	%f965, %f951, %f964;
	mul.f32 	%f966, %f965, %f965;
	fma.rn.f32 	%f969, %f812, %f966, %f811;
	fma.rn.f32 	%f971, %f969, %f966, %f814;
	mul.rn.f32 	%f972, %f971, %f966;
	mul.rn.f32 	%f973, %f972, %f965;
	sub.f32 	%f974, %f963, %f965;
	neg.f32 	%f975, %f965;
	add.f32 	%f976, %f974, %f974;
	fma.rn.f32 	%f977, %f975, %f963, %f976;
	mul.rn.f32 	%f978, %f951, %f977;
	add.f32 	%f979, %f973, %f965;
	sub.f32 	%f980, %f965, %f979;
	add.f32 	%f981, %f973, %f980;
	add.f32 	%f982, %f978, %f981;
	add.f32 	%f983, %f979, %f982;
	sub.f32 	%f984, %f979, %f983;
	add.f32 	%f985, %f982, %f984;
	mul.rn.f32 	%f987, %f962, %f830;
	mul.rn.f32 	%f989, %f962, %f832;
	add.f32 	%f990, %f987, %f983;
	sub.f32 	%f991, %f987, %f990;
	add.f32 	%f992, %f983, %f991;
	add.f32 	%f993, %f985, %f992;
	add.f32 	%f994, %f989, %f993;
	add.f32 	%f995, %f990, %f994;
	sub.f32 	%f996, %f990, %f995;
	add.f32 	%f997, %f994, %f996;
	mul.rn.f32 	%f999, %f842, %f995;
	neg.f32 	%f1000, %f999;
	fma.rn.f32 	%f1001, %f842, %f995, %f1000;
	fma.rn.f32 	%f1002, %f842, %f997, %f1001;
	fma.rn.f32 	%f1004, %f847, %f995, %f1002;
	add.rn.f32 	%f1005, %f999, %f1004;
	neg.f32 	%f1006, %f1005;
	add.rn.f32 	%f1007, %f999, %f1006;
	add.rn.f32 	%f1008, %f1007, %f1004;
	mov.b32 	 %r294, %f1005;
	setp.eq.s32	%p121, %r294, 1118925336;
	add.s32 	%r295, %r294, -1;
	mov.b32 	 %f1009, %r295;
	add.f32 	%f1010, %f1008, 0f37000000;
	selp.f32	%f1011, %f1009, %f1005, %p121;
	selp.f32	%f323, %f1010, %f1008, %p121;
	mul.f32 	%f1012, %f1011, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1013, %f1012;
	fma.rn.f32 	%f1015, %f1013, %f858, %f1011;
	fma.rn.f32 	%f1017, %f1013, %f860, %f1015;
	mul.f32 	%f1018, %f1017, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1019, %f1018;
	add.f32 	%f1020, %f1013, 0f00000000;
	ex2.approx.f32 	%f1021, %f1020;
	mul.f32 	%f1022, %f1019, %f1021;
	setp.lt.f32	%p122, %f1011, 0fC2D20000;
	selp.f32	%f1023, 0f00000000, %f1022, %p122;
	setp.gt.f32	%p123, %f1011, 0f42D20000;
	selp.f32	%f1314, 0f7F800000, %f1023, %p123;
	setp.eq.f32	%p124, %f1314, 0f7F800000;
	@%p124 bra 	BB0_115;

	fma.rn.f32 	%f1314, %f1314, %f323, %f1314;

BB0_115:
	setp.lt.f32	%p125, %f294, 0f00000000;
	and.pred  	%p6, %p125, %p94;
	mov.b32 	 %r296, %f1314;
	xor.b32  	%r297, %r296, -2147483648;
	mov.b32 	 %f1024, %r297;
	selp.f32	%f1316, %f1024, %f1314, %p6;
	setp.eq.f32	%p127, %f294, 0f00000000;
	@%p127 bra 	BB0_118;
	bra.uni 	BB0_116;

BB0_118:
	add.f32 	%f1027, %f294, %f294;
	selp.f32	%f1316, %f1027, 0f00000000, %p94;
	bra.uni 	BB0_119;

BB0_116:
	setp.geu.f32	%p128, %f294, 0f00000000;
	@%p128 bra 	BB0_119;

	cvt.rzi.f32.f32	%f1026, %f842;
	setp.neu.f32	%p129, %f1026, 0f3EE66666;
	selp.f32	%f1316, 0f7FFFFFFF, %f1316, %p129;

BB0_119:
	add.f32 	%f1028, %f322, 0f3EE66666;
	mov.b32 	 %r298, %f1028;
	setp.lt.s32	%p131, %r298, 2139095040;
	@%p131 bra 	BB0_124;

	setp.gtu.f32	%p132, %f322, 0f7F800000;
	@%p132 bra 	BB0_123;
	bra.uni 	BB0_121;

BB0_123:
	add.f32 	%f1316, %f294, 0f3EE66666;
	bra.uni 	BB0_124;

BB0_121:
	setp.neu.f32	%p133, %f322, 0f7F800000;
	@%p133 bra 	BB0_124;

	selp.f32	%f1316, 0fFF800000, 0f7F800000, %p6;

BB0_124:
	setp.eq.f32	%p134, %f294, 0f3F800000;
	selp.f32	%f1029, 0f3F800000, %f1316, %p134;
	cvt.u64.u32	%rd90, %r5;
	cvt.u64.u32	%rd89, %r4;
	mov.u64 	%rd93, image;
	cvta.global.u64 	%rd88, %rd93;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r102, %r103, %rd89, %rd90, %rd26, %rd26);
	// inline asm
	cvt.sat.f32.f32	%f1030, %f1029;
	mul.f32 	%f1031, %f1030, 0f437FFD71;
	cvt.rzi.u32.f32	%r301, %f1031;
	cvt.sat.f32.f32	%f1032, %f321;
	mul.f32 	%f1033, %f1032, 0f437FFD71;
	cvt.rzi.u32.f32	%r302, %f1033;
	cvt.sat.f32.f32	%f1034, %f308;
	mul.f32 	%f1035, %f1034, 0f437FFD71;
	cvt.rzi.u32.f32	%r303, %f1035;
	cvt.u16.u32	%rs16, %r301;
	cvt.u16.u32	%rs17, %r303;
	cvt.u16.u32	%rs18, %r302;
	mov.u16 	%rs19, 255;
	st.v4.u8 	[%rd87], {%rs16, %rs18, %rs17, %rs19};
	ld.global.u32 	%r417, [imageEnabled];

BB0_125:
	cvt.u64.u32	%rd17, %r4;
	cvt.u64.u32	%rd18, %r5;
	and.b32  	%r304, %r417, 4;
	setp.eq.s32	%p135, %r304, 0;
	@%p135 bra 	BB0_129;

	ld.global.u32 	%r305, [additive];
	setp.eq.s32	%p136, %r305, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f559;}

	// inline asm
	@%p136 bra 	BB0_128;

	mov.u64 	%rd106, image_HDR;
	cvta.global.u64 	%rd95, %rd106;
	mov.u32 	%r309, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r102, %r309, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs27, %rs28, %rs29, %rs30}, [%rd94];
	// inline asm
	{  cvt.f32.f16 %f1037, %rs27;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1038, %rs28;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1039, %rs29;}

	// inline asm
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd95, %r102, %r309, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1040, %f292, %f1037;
	add.f32 	%f1041, %f293, %f1038;
	add.f32 	%f1042, %f294, %f1039;
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f1042;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f1041;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f1040;}

	// inline asm
	st.v4.u16 	[%rd100], {%rs24, %rs25, %rs26, %rs20};
	bra.uni 	BB0_129;

BB0_128:
	mov.u64 	%rd113, image_HDR;
	cvta.global.u64 	%rd108, %rd113;
	mov.u32 	%r311, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r102, %r311, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f294;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f293;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f292;}

	// inline asm
	st.v4.u16 	[%rd107], {%rs31, %rs32, %rs33, %rs20};

BB0_129:
	selp.f32	%f1047, 0f3F000000, 0f3E800000, %p149;
	mul.f32 	%f1048, %f1047, %f1298;
	mul.f32 	%f1049, %f1047, %f1299;
	mul.f32 	%f1050, %f1047, %f1300;
	mul.f32 	%f1051, %f1047, %f1295;
	mul.f32 	%f1052, %f1047, %f1296;
	mul.f32 	%f1053, %f1047, %f1297;
	mul.f32 	%f1054, %f1047, %f1292;
	mul.f32 	%f1055, %f1047, %f1293;
	mul.f32 	%f1056, %f1047, %f1294;
	mul.f32 	%f1057, %f1047, %f1289;
	mul.f32 	%f1058, %f1047, %f1290;
	mul.f32 	%f1059, %f1047, %f1291;
	ld.global.f32 	%f1060, [lightColor];
	mul.f32 	%f334, %f1048, %f1060;
	ld.global.f32 	%f1061, [lightColor+4];
	mul.f32 	%f335, %f1049, %f1061;
	ld.global.f32 	%f1062, [lightColor+8];
	mul.f32 	%f336, %f1050, %f1062;
	mul.f32 	%f337, %f1051, %f1060;
	mul.f32 	%f338, %f1052, %f1061;
	mul.f32 	%f339, %f1053, %f1062;
	mul.f32 	%f340, %f1054, %f1060;
	mul.f32 	%f341, %f1055, %f1061;
	mul.f32 	%f342, %f1056, %f1062;
	mul.f32 	%f343, %f1057, %f1060;
	mul.f32 	%f344, %f1058, %f1061;
	mul.f32 	%f345, %f1059, %f1062;
	ld.global.u32 	%r312, [additive];
	setp.eq.s32	%p137, %r312, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f559;}

	// inline asm
	@%p137 bra 	BB0_131;

	mov.u64 	%rd126, image_RNM0;
	cvta.global.u64 	%rd115, %rd126;
	mov.u32 	%r316, 8;
	// inline asm
	call (%rd114), _rt_buffer_get_64, (%rd115, %r102, %r316, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs41, %rs42, %rs43, %rs44}, [%rd114];
	// inline asm
	{  cvt.f32.f16 %f1063, %rs41;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1064, %rs42;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1065, %rs43;}

	// inline asm
	// inline asm
	call (%rd120), _rt_buffer_get_64, (%rd115, %r102, %r316, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1066, %f334, %f1063;
	add.f32 	%f1067, %f335, %f1064;
	add.f32 	%f1068, %f336, %f1065;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f1068;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f1067;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f1066;}

	// inline asm
	st.v4.u16 	[%rd120], {%rs38, %rs39, %rs40, %rs34};
	bra.uni 	BB0_132;

BB0_131:
	mov.u64 	%rd133, image_RNM0;
	cvta.global.u64 	%rd128, %rd133;
	mov.u32 	%r318, 8;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd128, %r102, %r318, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f336;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f335;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f334;}

	// inline asm
	st.v4.u16 	[%rd127], {%rs45, %rs46, %rs47, %rs34};

BB0_132:
	mov.f32 	%f1073, 0f34000000;
	max.f32 	%f1074, %f334, %f1073;
	div.rn.f32 	%f1075, %f337, %f1074;
	max.f32 	%f1076, %f335, %f1073;
	div.rn.f32 	%f1077, %f338, %f1076;
	max.f32 	%f1078, %f336, %f1073;
	div.rn.f32 	%f1079, %f339, %f1078;
	fma.rn.f32 	%f346, %f1075, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f347, %f1077, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f348, %f1079, 0f3F000000, 0f3F000000;
	div.rn.f32 	%f1080, %f340, %f1074;
	div.rn.f32 	%f1081, %f341, %f1076;
	div.rn.f32 	%f1082, %f342, %f1078;
	fma.rn.f32 	%f349, %f1080, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f350, %f1081, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f351, %f1082, 0f3F000000, 0f3F000000;
	div.rn.f32 	%f1083, %f343, %f1074;
	div.rn.f32 	%f1084, %f344, %f1076;
	div.rn.f32 	%f1085, %f345, %f1078;
	fma.rn.f32 	%f352, %f1083, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f353, %f1084, 0f3F000000, 0f3F000000;
	fma.rn.f32 	%f354, %f1085, 0f3F000000, 0f3F000000;
	ld.global.u32 	%r319, [additive];
	setp.eq.s32	%p138, %r319, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f559;}

	// inline asm
	@%p138 bra 	BB0_134;

	mov.u64 	%rd146, image_RNM1;
	cvta.global.u64 	%rd135, %rd146;
	mov.u32 	%r323, 8;
	// inline asm
	call (%rd134), _rt_buffer_get_64, (%rd135, %r102, %r323, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs55, %rs56, %rs57, %rs58}, [%rd134];
	// inline asm
	{  cvt.f32.f16 %f1086, %rs55;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1087, %rs56;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1088, %rs57;}

	// inline asm
	// inline asm
	call (%rd140), _rt_buffer_get_64, (%rd135, %r102, %r323, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1089, %f346, %f1086;
	add.f32 	%f1090, %f347, %f1087;
	add.f32 	%f1091, %f348, %f1088;
	// inline asm
	{  cvt.rn.f16.f32 %rs54, %f1091;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs53, %f1090;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f1089;}

	// inline asm
	st.v4.u16 	[%rd140], {%rs52, %rs53, %rs54, %rs48};
	bra.uni 	BB0_135;

BB0_134:
	mov.u64 	%rd153, image_RNM1;
	cvta.global.u64 	%rd148, %rd153;
	mov.u32 	%r325, 8;
	// inline asm
	call (%rd147), _rt_buffer_get_64, (%rd148, %r102, %r325, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs61, %f348;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f347;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f346;}

	// inline asm
	st.v4.u16 	[%rd147], {%rs59, %rs60, %rs61, %rs48};

BB0_135:
	ld.global.u32 	%r326, [additive];
	setp.eq.s32	%p139, %r326, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs62, %f559;}

	// inline asm
	@%p139 bra 	BB0_137;

	mov.u64 	%rd166, image_RNM2;
	cvta.global.u64 	%rd155, %rd166;
	mov.u32 	%r330, 8;
	// inline asm
	call (%rd154), _rt_buffer_get_64, (%rd155, %r102, %r330, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs69, %rs70, %rs71, %rs72}, [%rd154];
	// inline asm
	{  cvt.f32.f16 %f1096, %rs69;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1097, %rs70;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1098, %rs71;}

	// inline asm
	// inline asm
	call (%rd160), _rt_buffer_get_64, (%rd155, %r102, %r330, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1099, %f349, %f1096;
	add.f32 	%f1100, %f350, %f1097;
	add.f32 	%f1101, %f351, %f1098;
	// inline asm
	{  cvt.rn.f16.f32 %rs68, %f1101;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs67, %f1100;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f1099;}

	// inline asm
	st.v4.u16 	[%rd160], {%rs66, %rs67, %rs68, %rs62};
	bra.uni 	BB0_138;

BB0_137:
	mov.u64 	%rd173, image_RNM2;
	cvta.global.u64 	%rd168, %rd173;
	mov.u32 	%r332, 8;
	// inline asm
	call (%rd167), _rt_buffer_get_64, (%rd168, %r102, %r332, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs75, %f351;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f350;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f349;}

	// inline asm
	st.v4.u16 	[%rd167], {%rs73, %rs74, %rs75, %rs62};

BB0_138:
	ld.global.u32 	%r333, [additive];
	setp.eq.s32	%p140, %r333, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f559;}

	// inline asm
	@%p140 bra 	BB0_140;

	mov.u64 	%rd186, image_RNM3;
	cvta.global.u64 	%rd175, %rd186;
	mov.u32 	%r337, 8;
	// inline asm
	call (%rd174), _rt_buffer_get_64, (%rd175, %r102, %r337, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs83, %rs84, %rs85, %rs86}, [%rd174];
	// inline asm
	{  cvt.f32.f16 %f1106, %rs83;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1107, %rs84;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1108, %rs85;}

	// inline asm
	// inline asm
	call (%rd180), _rt_buffer_get_64, (%rd175, %r102, %r337, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f1109, %f352, %f1106;
	add.f32 	%f1110, %f353, %f1107;
	add.f32 	%f1111, %f354, %f1108;
	// inline asm
	{  cvt.rn.f16.f32 %rs82, %f1111;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs81, %f1110;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f1109;}

	// inline asm
	st.v4.u16 	[%rd180], {%rs80, %rs81, %rs82, %rs76};
	bra.uni 	BB0_161;

BB0_140:
	mov.u64 	%rd193, image_RNM3;
	cvta.global.u64 	%rd188, %rd193;
	mov.u32 	%r339, 8;
	// inline asm
	call (%rd187), _rt_buffer_get_64, (%rd188, %r102, %r339, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs89, %f354;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f353;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f352;}

	// inline asm
	st.v4.u16 	[%rd187], {%rs87, %rs88, %rs89, %rs76};

BB0_161:
	ret;
}



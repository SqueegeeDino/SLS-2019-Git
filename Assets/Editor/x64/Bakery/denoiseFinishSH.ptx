//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 1 .b8 output_buffer[1];
.global .align 1 .b8 image2[1];
.global .align 1 .b8 image3[1];
.global .align 4 .f32 isL1;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4isL1E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename4isL1E[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4isL1E = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic4isL1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4isL1E[1];

.visible .entry _Z6oxMainv(

)
{
	.reg .pred 	%p<53>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<343>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<45>;


	ld.global.v2.u32 	{%r3, %r4}, [pixelID];
	cvt.u64.u32	%rd5, %r3;
	cvt.u64.u32	%rd6, %r4;
	mov.u64 	%rd9, output_buffer;
	cvta.global.u64 	%rd4, %rd9;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 16;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r1, %r2, %rd5, %rd6, %rd8, %rd8);
	// inline asm
	ld.v4.f32 	{%f48, %f49, %f50, %f51}, [%rd3];
	mov.f32 	%f52, 0f3F8CCCCD;
	cvt.rzi.f32.f32	%f53, %f52;
	fma.rn.f32 	%f54, %f53, 0fC0000000, 0f400CCCCD;
	abs.f32 	%f3, %f54;
	abs.f32 	%f5, %f48;
	setp.lt.f32	%p4, %f5, 0f00800000;
	mul.f32 	%f55, %f5, 0f4B800000;
	selp.f32	%f56, 0fC3170000, 0fC2FE0000, %p4;
	selp.f32	%f57, %f55, %f5, %p4;
	mov.b32 	 %r7, %f57;
	and.b32  	%r8, %r7, 8388607;
	or.b32  	%r9, %r8, 1065353216;
	mov.b32 	 %f58, %r9;
	shr.u32 	%r10, %r7, 23;
	cvt.rn.f32.u32	%f59, %r10;
	add.f32 	%f60, %f56, %f59;
	setp.gt.f32	%p5, %f58, 0f3FB504F3;
	mul.f32 	%f61, %f58, 0f3F000000;
	add.f32 	%f62, %f60, 0f3F800000;
	selp.f32	%f63, %f61, %f58, %p5;
	selp.f32	%f64, %f62, %f60, %p5;
	add.f32 	%f65, %f63, 0fBF800000;
	add.f32 	%f47, %f63, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f46,%f47;
	// inline asm
	add.f32 	%f66, %f65, %f65;
	mul.f32 	%f67, %f46, %f66;
	mul.f32 	%f68, %f67, %f67;
	mov.f32 	%f69, 0f3C4CAF63;
	mov.f32 	%f70, 0f3B18F0FE;
	fma.rn.f32 	%f71, %f70, %f68, %f69;
	mov.f32 	%f72, 0f3DAAAABD;
	fma.rn.f32 	%f73, %f71, %f68, %f72;
	mul.rn.f32 	%f74, %f73, %f68;
	mul.rn.f32 	%f75, %f74, %f67;
	sub.f32 	%f76, %f65, %f67;
	neg.f32 	%f77, %f67;
	add.f32 	%f78, %f76, %f76;
	fma.rn.f32 	%f79, %f77, %f65, %f78;
	mul.rn.f32 	%f80, %f46, %f79;
	add.f32 	%f81, %f75, %f67;
	sub.f32 	%f82, %f67, %f81;
	add.f32 	%f83, %f75, %f82;
	add.f32 	%f84, %f80, %f83;
	add.f32 	%f85, %f81, %f84;
	sub.f32 	%f86, %f81, %f85;
	add.f32 	%f87, %f84, %f86;
	mov.f32 	%f88, 0f3F317200;
	mul.rn.f32 	%f89, %f64, %f88;
	mov.f32 	%f90, 0f35BFBE8E;
	mul.rn.f32 	%f91, %f64, %f90;
	add.f32 	%f92, %f89, %f85;
	sub.f32 	%f93, %f89, %f92;
	add.f32 	%f94, %f85, %f93;
	add.f32 	%f95, %f87, %f94;
	add.f32 	%f96, %f91, %f95;
	add.f32 	%f97, %f92, %f96;
	sub.f32 	%f98, %f92, %f97;
	add.f32 	%f99, %f96, %f98;
	mov.f32 	%f100, 0f400CCCCD;
	mul.rn.f32 	%f101, %f100, %f97;
	neg.f32 	%f102, %f101;
	fma.rn.f32 	%f103, %f100, %f97, %f102;
	fma.rn.f32 	%f104, %f100, %f99, %f103;
	mov.f32 	%f105, 0f00000000;
	fma.rn.f32 	%f106, %f105, %f97, %f104;
	add.rn.f32 	%f107, %f101, %f106;
	neg.f32 	%f108, %f107;
	add.rn.f32 	%f109, %f101, %f108;
	add.rn.f32 	%f110, %f109, %f106;
	mov.b32 	 %r11, %f107;
	setp.eq.s32	%p6, %r11, 1118925336;
	add.s32 	%r12, %r11, -1;
	mov.b32 	 %f111, %r12;
	add.f32 	%f112, %f110, 0f37000000;
	selp.f32	%f113, %f111, %f107, %p6;
	selp.f32	%f6, %f112, %f110, %p6;
	mul.f32 	%f114, %f113, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f115, %f114;
	mov.f32 	%f116, 0fBF317200;
	fma.rn.f32 	%f117, %f115, %f116, %f113;
	mov.f32 	%f118, 0fB5BFBE8E;
	fma.rn.f32 	%f119, %f115, %f118, %f117;
	mul.f32 	%f120, %f119, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f121, %f120;
	add.f32 	%f122, %f115, 0f00000000;
	ex2.approx.f32 	%f123, %f122;
	mul.f32 	%f124, %f121, %f123;
	setp.lt.f32	%p7, %f113, 0fC2D20000;
	selp.f32	%f125, 0f00000000, %f124, %p7;
	setp.gt.f32	%p8, %f113, 0f42D20000;
	selp.f32	%f334, 0f7F800000, %f125, %p8;
	setp.eq.f32	%p9, %f334, 0f7F800000;
	@%p9 bra 	BB0_2;

	fma.rn.f32 	%f334, %f334, %f6, %f334;

BB0_2:
	setp.lt.f32	%p10, %f48, 0f00000000;
	setp.eq.f32	%p11, %f3, 0f3F800000;
	and.pred  	%p1, %p10, %p11;
	mov.b32 	 %r13, %f334;
	xor.b32  	%r14, %r13, -2147483648;
	mov.b32 	 %f126, %r14;
	selp.f32	%f336, %f126, %f334, %p1;
	setp.eq.f32	%p12, %f48, 0f00000000;
	@%p12 bra 	BB0_5;
	bra.uni 	BB0_3;

BB0_5:
	add.f32 	%f129, %f48, %f48;
	selp.f32	%f336, %f129, 0f00000000, %p11;
	bra.uni 	BB0_6;

BB0_3:
	setp.geu.f32	%p13, %f48, 0f00000000;
	@%p13 bra 	BB0_6;

	mov.f32 	%f333, 0f400CCCCD;
	cvt.rzi.f32.f32	%f128, %f333;
	setp.neu.f32	%p14, %f128, 0f400CCCCD;
	selp.f32	%f336, 0f7FFFFFFF, %f336, %p14;

BB0_6:
	abs.f32 	%f310, %f48;
	add.f32 	%f130, %f310, 0f400CCCCD;
	mov.b32 	 %r15, %f130;
	setp.lt.s32	%p16, %r15, 2139095040;
	@%p16 bra 	BB0_11;

	abs.f32 	%f331, %f48;
	setp.gtu.f32	%p17, %f331, 0f7F800000;
	@%p17 bra 	BB0_10;
	bra.uni 	BB0_8;

BB0_10:
	add.f32 	%f336, %f48, 0f400CCCCD;
	bra.uni 	BB0_11;

BB0_8:
	abs.f32 	%f332, %f48;
	setp.neu.f32	%p18, %f332, 0f7F800000;
	@%p18 bra 	BB0_11;

	selp.f32	%f336, 0fFF800000, 0f7F800000, %p1;

BB0_11:
	mov.f32 	%f319, 0fB5BFBE8E;
	mov.f32 	%f318, 0fBF317200;
	mov.f32 	%f317, 0f00000000;
	mov.f32 	%f316, 0f35BFBE8E;
	mov.f32 	%f315, 0f3F317200;
	mov.f32 	%f314, 0f3DAAAABD;
	mov.f32 	%f313, 0f3C4CAF63;
	mov.f32 	%f312, 0f3B18F0FE;
	mov.f32 	%f311, 0f400CCCCD;
	setp.eq.f32	%p19, %f48, 0f3F800000;
	selp.f32	%f133, 0f3F800000, %f336, %p19;
	cvt.sat.f32.f32	%f17, %f133;
	abs.f32 	%f18, %f49;
	setp.lt.f32	%p20, %f18, 0f00800000;
	mul.f32 	%f134, %f18, 0f4B800000;
	selp.f32	%f135, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f136, %f134, %f18, %p20;
	mov.b32 	 %r16, %f136;
	and.b32  	%r17, %r16, 8388607;
	or.b32  	%r18, %r17, 1065353216;
	mov.b32 	 %f137, %r18;
	shr.u32 	%r19, %r16, 23;
	cvt.rn.f32.u32	%f138, %r19;
	add.f32 	%f139, %f135, %f138;
	setp.gt.f32	%p21, %f137, 0f3FB504F3;
	mul.f32 	%f140, %f137, 0f3F000000;
	add.f32 	%f141, %f139, 0f3F800000;
	selp.f32	%f142, %f140, %f137, %p21;
	selp.f32	%f143, %f141, %f139, %p21;
	add.f32 	%f144, %f142, 0fBF800000;
	add.f32 	%f132, %f142, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f131,%f132;
	// inline asm
	add.f32 	%f145, %f144, %f144;
	mul.f32 	%f146, %f131, %f145;
	mul.f32 	%f147, %f146, %f146;
	fma.rn.f32 	%f150, %f312, %f147, %f313;
	fma.rn.f32 	%f152, %f150, %f147, %f314;
	mul.rn.f32 	%f153, %f152, %f147;
	mul.rn.f32 	%f154, %f153, %f146;
	sub.f32 	%f155, %f144, %f146;
	neg.f32 	%f156, %f146;
	add.f32 	%f157, %f155, %f155;
	fma.rn.f32 	%f158, %f156, %f144, %f157;
	mul.rn.f32 	%f159, %f131, %f158;
	add.f32 	%f160, %f154, %f146;
	sub.f32 	%f161, %f146, %f160;
	add.f32 	%f162, %f154, %f161;
	add.f32 	%f163, %f159, %f162;
	add.f32 	%f164, %f160, %f163;
	sub.f32 	%f165, %f160, %f164;
	add.f32 	%f166, %f163, %f165;
	mul.rn.f32 	%f168, %f143, %f315;
	mul.rn.f32 	%f170, %f143, %f316;
	add.f32 	%f171, %f168, %f164;
	sub.f32 	%f172, %f168, %f171;
	add.f32 	%f173, %f164, %f172;
	add.f32 	%f174, %f166, %f173;
	add.f32 	%f175, %f170, %f174;
	add.f32 	%f176, %f171, %f175;
	sub.f32 	%f177, %f171, %f176;
	add.f32 	%f178, %f175, %f177;
	mul.rn.f32 	%f180, %f311, %f176;
	neg.f32 	%f181, %f180;
	fma.rn.f32 	%f182, %f311, %f176, %f181;
	fma.rn.f32 	%f183, %f311, %f178, %f182;
	fma.rn.f32 	%f185, %f317, %f176, %f183;
	add.rn.f32 	%f186, %f180, %f185;
	neg.f32 	%f187, %f186;
	add.rn.f32 	%f188, %f180, %f187;
	add.rn.f32 	%f189, %f188, %f185;
	mov.b32 	 %r20, %f186;
	setp.eq.s32	%p22, %r20, 1118925336;
	add.s32 	%r21, %r20, -1;
	mov.b32 	 %f190, %r21;
	add.f32 	%f191, %f189, 0f37000000;
	selp.f32	%f192, %f190, %f186, %p22;
	selp.f32	%f19, %f191, %f189, %p22;
	mul.f32 	%f193, %f192, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f194, %f193;
	fma.rn.f32 	%f196, %f194, %f318, %f192;
	fma.rn.f32 	%f198, %f194, %f319, %f196;
	mul.f32 	%f199, %f198, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f200, %f199;
	add.f32 	%f201, %f194, 0f00000000;
	ex2.approx.f32 	%f202, %f201;
	mul.f32 	%f203, %f200, %f202;
	setp.lt.f32	%p23, %f192, 0fC2D20000;
	selp.f32	%f204, 0f00000000, %f203, %p23;
	setp.gt.f32	%p24, %f192, 0f42D20000;
	selp.f32	%f337, 0f7F800000, %f204, %p24;
	setp.eq.f32	%p25, %f337, 0f7F800000;
	@%p25 bra 	BB0_13;

	fma.rn.f32 	%f337, %f337, %f19, %f337;

BB0_13:
	setp.lt.f32	%p26, %f49, 0f00000000;
	and.pred  	%p2, %p26, %p11;
	mov.b32 	 %r22, %f337;
	xor.b32  	%r23, %r22, -2147483648;
	mov.b32 	 %f205, %r23;
	selp.f32	%f339, %f205, %f337, %p2;
	setp.eq.f32	%p28, %f49, 0f00000000;
	@%p28 bra 	BB0_16;
	bra.uni 	BB0_14;

BB0_16:
	add.f32 	%f208, %f49, %f49;
	selp.f32	%f339, %f208, 0f00000000, %p11;
	bra.uni 	BB0_17;

BB0_14:
	setp.geu.f32	%p29, %f49, 0f00000000;
	@%p29 bra 	BB0_17;

	mov.f32 	%f330, 0f400CCCCD;
	cvt.rzi.f32.f32	%f207, %f330;
	setp.neu.f32	%p30, %f207, 0f400CCCCD;
	selp.f32	%f339, 0f7FFFFFFF, %f339, %p30;

BB0_17:
	add.f32 	%f209, %f18, 0f400CCCCD;
	mov.b32 	 %r24, %f209;
	setp.lt.s32	%p32, %r24, 2139095040;
	@%p32 bra 	BB0_22;

	setp.gtu.f32	%p33, %f18, 0f7F800000;
	@%p33 bra 	BB0_21;
	bra.uni 	BB0_19;

BB0_21:
	add.f32 	%f339, %f49, 0f400CCCCD;
	bra.uni 	BB0_22;

BB0_19:
	setp.neu.f32	%p34, %f18, 0f7F800000;
	@%p34 bra 	BB0_22;

	selp.f32	%f339, 0fFF800000, 0f7F800000, %p2;

BB0_22:
	mov.f32 	%f328, 0fB5BFBE8E;
	mov.f32 	%f327, 0fBF317200;
	mov.f32 	%f326, 0f00000000;
	mov.f32 	%f325, 0f35BFBE8E;
	mov.f32 	%f324, 0f3F317200;
	mov.f32 	%f323, 0f3DAAAABD;
	mov.f32 	%f322, 0f3C4CAF63;
	mov.f32 	%f321, 0f3B18F0FE;
	mov.f32 	%f320, 0f400CCCCD;
	setp.eq.f32	%p35, %f49, 0f3F800000;
	selp.f32	%f212, 0f3F800000, %f339, %p35;
	cvt.sat.f32.f32	%f30, %f212;
	abs.f32 	%f31, %f50;
	setp.lt.f32	%p36, %f31, 0f00800000;
	mul.f32 	%f213, %f31, 0f4B800000;
	selp.f32	%f214, 0fC3170000, 0fC2FE0000, %p36;
	selp.f32	%f215, %f213, %f31, %p36;
	mov.b32 	 %r25, %f215;
	and.b32  	%r26, %r25, 8388607;
	or.b32  	%r27, %r26, 1065353216;
	mov.b32 	 %f216, %r27;
	shr.u32 	%r28, %r25, 23;
	cvt.rn.f32.u32	%f217, %r28;
	add.f32 	%f218, %f214, %f217;
	setp.gt.f32	%p37, %f216, 0f3FB504F3;
	mul.f32 	%f219, %f216, 0f3F000000;
	add.f32 	%f220, %f218, 0f3F800000;
	selp.f32	%f221, %f219, %f216, %p37;
	selp.f32	%f222, %f220, %f218, %p37;
	add.f32 	%f223, %f221, 0fBF800000;
	add.f32 	%f211, %f221, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f210,%f211;
	// inline asm
	add.f32 	%f224, %f223, %f223;
	mul.f32 	%f225, %f210, %f224;
	mul.f32 	%f226, %f225, %f225;
	fma.rn.f32 	%f229, %f321, %f226, %f322;
	fma.rn.f32 	%f231, %f229, %f226, %f323;
	mul.rn.f32 	%f232, %f231, %f226;
	mul.rn.f32 	%f233, %f232, %f225;
	sub.f32 	%f234, %f223, %f225;
	neg.f32 	%f235, %f225;
	add.f32 	%f236, %f234, %f234;
	fma.rn.f32 	%f237, %f235, %f223, %f236;
	mul.rn.f32 	%f238, %f210, %f237;
	add.f32 	%f239, %f233, %f225;
	sub.f32 	%f240, %f225, %f239;
	add.f32 	%f241, %f233, %f240;
	add.f32 	%f242, %f238, %f241;
	add.f32 	%f243, %f239, %f242;
	sub.f32 	%f244, %f239, %f243;
	add.f32 	%f245, %f242, %f244;
	mul.rn.f32 	%f247, %f222, %f324;
	mul.rn.f32 	%f249, %f222, %f325;
	add.f32 	%f250, %f247, %f243;
	sub.f32 	%f251, %f247, %f250;
	add.f32 	%f252, %f243, %f251;
	add.f32 	%f253, %f245, %f252;
	add.f32 	%f254, %f249, %f253;
	add.f32 	%f255, %f250, %f254;
	sub.f32 	%f256, %f250, %f255;
	add.f32 	%f257, %f254, %f256;
	mul.rn.f32 	%f259, %f320, %f255;
	neg.f32 	%f260, %f259;
	fma.rn.f32 	%f261, %f320, %f255, %f260;
	fma.rn.f32 	%f262, %f320, %f257, %f261;
	fma.rn.f32 	%f264, %f326, %f255, %f262;
	add.rn.f32 	%f265, %f259, %f264;
	neg.f32 	%f266, %f265;
	add.rn.f32 	%f267, %f259, %f266;
	add.rn.f32 	%f268, %f267, %f264;
	mov.b32 	 %r29, %f265;
	setp.eq.s32	%p38, %r29, 1118925336;
	add.s32 	%r30, %r29, -1;
	mov.b32 	 %f269, %r30;
	add.f32 	%f270, %f268, 0f37000000;
	selp.f32	%f271, %f269, %f265, %p38;
	selp.f32	%f32, %f270, %f268, %p38;
	mul.f32 	%f272, %f271, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f273, %f272;
	fma.rn.f32 	%f275, %f273, %f327, %f271;
	fma.rn.f32 	%f277, %f273, %f328, %f275;
	mul.f32 	%f278, %f277, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f279, %f278;
	add.f32 	%f280, %f273, 0f00000000;
	ex2.approx.f32 	%f281, %f280;
	mul.f32 	%f282, %f279, %f281;
	setp.lt.f32	%p39, %f271, 0fC2D20000;
	selp.f32	%f283, 0f00000000, %f282, %p39;
	setp.gt.f32	%p40, %f271, 0f42D20000;
	selp.f32	%f340, 0f7F800000, %f283, %p40;
	setp.eq.f32	%p41, %f340, 0f7F800000;
	@%p41 bra 	BB0_24;

	fma.rn.f32 	%f340, %f340, %f32, %f340;

BB0_24:
	setp.lt.f32	%p42, %f50, 0f00000000;
	and.pred  	%p3, %p42, %p11;
	mov.b32 	 %r31, %f340;
	xor.b32  	%r32, %r31, -2147483648;
	mov.b32 	 %f284, %r32;
	selp.f32	%f342, %f284, %f340, %p3;
	setp.eq.f32	%p44, %f50, 0f00000000;
	@%p44 bra 	BB0_27;
	bra.uni 	BB0_25;

BB0_27:
	add.f32 	%f287, %f50, %f50;
	selp.f32	%f342, %f287, 0f00000000, %p11;
	bra.uni 	BB0_28;

BB0_25:
	setp.geu.f32	%p45, %f50, 0f00000000;
	@%p45 bra 	BB0_28;

	mov.f32 	%f329, 0f400CCCCD;
	cvt.rzi.f32.f32	%f286, %f329;
	setp.neu.f32	%p46, %f286, 0f400CCCCD;
	selp.f32	%f342, 0f7FFFFFFF, %f342, %p46;

BB0_28:
	add.f32 	%f288, %f31, 0f400CCCCD;
	mov.b32 	 %r33, %f288;
	setp.lt.s32	%p48, %r33, 2139095040;
	@%p48 bra 	BB0_33;

	setp.gtu.f32	%p49, %f31, 0f7F800000;
	@%p49 bra 	BB0_32;
	bra.uni 	BB0_30;

BB0_32:
	add.f32 	%f342, %f50, 0f400CCCCD;
	bra.uni 	BB0_33;

BB0_30:
	setp.neu.f32	%p50, %f31, 0f7F800000;
	@%p50 bra 	BB0_33;

	selp.f32	%f342, 0fFF800000, 0f7F800000, %p3;

BB0_33:
	setp.eq.f32	%p51, %f50, 0f3F800000;
	selp.f32	%f289, 0f3F800000, %f342, %p51;
	cvt.sat.f32.f32	%f290, %f289;
	max.f32 	%f291, %f17, %f30;
	max.f32 	%f292, %f291, %f290;
	mov.f32 	%f293, 0f3F800000;
	sub.f32 	%f294, %f293, %f292;
	rcp.rn.f32 	%f295, %f294;
	mul.f32 	%f296, %f17, %f295;
	mul.f32 	%f297, %f30, %f295;
	mul.f32 	%f298, %f290, %f295;
	mul.f32 	%f43, %f296, 0f3E800000;
	mul.f32 	%f44, %f297, 0f3E800000;
	mul.f32 	%f45, %f298, 0f3E800000;
	ld.global.f32 	%f299, [isL1];
	setp.gt.f32	%p52, %f299, 0f3F000000;
	ld.global.v2.u32 	{%r34, %r35}, [pixelID];
	cvt.u64.u32	%rd1, %r34;
	cvt.u64.u32	%rd2, %r35;
	@%p52 bra 	BB0_35;
	bra.uni 	BB0_34;

BB0_35:
	mov.u64 	%rd44, 0;
	mov.u32 	%r64, 2;
	mov.u64 	%rd41, image2;
	cvta.global.u64 	%rd18, %rd41;
	mov.u32 	%r45, 8;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd18, %r64, %r45, %rd1, %rd2, %rd44, %rd44);
	// inline asm
	ld.global.v2.u32 	{%r48, %r49}, [pixelID];
	cvt.u64.u32	%rd25, %r48;
	cvt.u64.u32	%rd26, %r49;
	// inline asm
	call (%rd23), _rt_buffer_get_64, (%rd18, %r64, %r45, %rd25, %rd26, %rd44, %rd44);
	// inline asm
	ld.global.v2.u32 	{%r52, %r53}, [pixelID];
	cvt.u64.u32	%rd31, %r52;
	cvt.u64.u32	%rd32, %r53;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd18, %r64, %r45, %rd31, %rd32, %rd44, %rd44);
	// inline asm
	ld.global.v2.u32 	{%r56, %r57}, [pixelID];
	cvt.u64.u32	%rd37, %r56;
	cvt.u64.u32	%rd38, %r57;
	mov.u64 	%rd42, image3;
	cvta.global.u64 	%rd36, %rd42;
	mov.u32 	%r47, 4;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd36, %r64, %r47, %rd37, %rd38, %rd44, %rd44);
	// inline asm
	cvt.sat.f32.f32	%f304, %f43;
	mul.f32 	%f305, %f304, 0f437F0000;
	cvt.rzi.u32.f32	%r60, %f305;
	cvt.sat.f32.f32	%f306, %f44;
	mul.f32 	%f307, %f306, 0f437F0000;
	cvt.rzi.u32.f32	%r61, %f307;
	cvt.sat.f32.f32	%f308, %f45;
	mul.f32 	%f309, %f308, 0f437F0000;
	cvt.rzi.u32.f32	%r62, %f309;
	cvt.u16.u32	%rs5, %r62;
	cvt.u16.u32	%rs6, %r61;
	cvt.u16.u32	%rs7, %r60;
	mov.u16 	%rs8, 255;
	st.v4.u8 	[%rd35], {%rs7, %rs6, %rs5, %rs8};
	bra.uni 	BB0_36;

BB0_34:
	mov.u64 	%rd43, 0;
	mov.u32 	%r63, 2;
	mov.u64 	%rd16, image2;
	cvta.global.u64 	%rd11, %rd16;
	mov.u32 	%r39, 8;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r63, %r39, %rd1, %rd2, %rd43, %rd43);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs4, %f293;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs3, %f45;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs2, %f44;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f43;}

	// inline asm
	st.v4.u16 	[%rd10], {%rs1, %rs2, %rs3, %rs4};

BB0_36:
	ret;
}



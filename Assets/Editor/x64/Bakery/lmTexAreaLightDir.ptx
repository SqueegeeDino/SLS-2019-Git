//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 lightMeshBuffer[1];
.global .align 4 .u32 lightMeshBufferSize;
.global .align 4 .f32 lightInvCutoff;
.global .align 4 .f32 lightPointSize;
.global .align 4 .b8 lightColor[12];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .u32 samples;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19lightMeshBufferSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightInvCutoffE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14lightPointSizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10lightColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19lightMeshBufferSizeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightInvCutoffE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename14lightPointSizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10lightColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19lightMeshBufferSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightInvCutoffE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum14lightPointSizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10lightColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightInvCutoffE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14lightPointSizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10lightColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19lightMeshBufferSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightInvCutoffE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14lightPointSizeE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10lightColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[44];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<145>;
	.reg .b16 	%rs<55>;
	.reg .f32 	%f<992>;
	.reg .b32 	%r<375>;
	.reg .b64 	%rd<171>;


	mov.u64 	%rd170, __local_depot0;
	cvta.local.u64 	%SP, %rd170;
	ld.global.u32 	%r1, [samples];
	ld.global.v2.u32 	{%r103, %r104}, [pixelID];
	cvt.u64.u32	%rd23, %r103;
	cvt.u64.u32	%rd24, %r104;
	mov.u64 	%rd27, uvnormal;
	cvta.global.u64 	%rd22, %rd27;
	mov.u32 	%r101, 2;
	mov.u32 	%r102, 4;
	mov.u64 	%rd26, 0;
	// inline asm
	call (%rd21), _rt_buffer_get_64, (%rd22, %r101, %r102, %rd23, %rd24, %rd26, %rd26);
	// inline asm
	ld.u32 	%r2, [%rd21];
	shr.u32 	%r107, %r2, 16;
	cvt.u16.u32	%rs1, %r107;
	and.b16  	%rs3, %rs1, 255;
	cvt.u16.u32	%rs4, %r2;
	or.b16  	%rs5, %rs4, %rs3;
	setp.eq.s16	%p7, %rs5, 0;
	mov.f32 	%f909, 0f00000000;
	mov.f32 	%f910, %f909;
	mov.f32 	%f911, %f909;
	@%p7 bra 	BB0_2;

	ld.u8 	%rs6, [%rd21+1];
	and.b16  	%rs8, %rs4, 255;
	cvt.rn.f32.u16	%f224, %rs8;
	div.rn.f32 	%f225, %f224, 0f437F0000;
	fma.rn.f32 	%f226, %f225, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f227, %rs6;
	div.rn.f32 	%f228, %f227, 0f437F0000;
	fma.rn.f32 	%f229, %f228, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f230, %rs3;
	div.rn.f32 	%f231, %f230, 0f437F0000;
	fma.rn.f32 	%f232, %f231, 0f40000000, 0fBF800000;
	mul.f32 	%f233, %f229, %f229;
	fma.rn.f32 	%f234, %f226, %f226, %f233;
	fma.rn.f32 	%f235, %f232, %f232, %f234;
	sqrt.rn.f32 	%f236, %f235;
	rcp.rn.f32 	%f237, %f236;
	mul.f32 	%f909, %f226, %f237;
	mul.f32 	%f910, %f229, %f237;
	mul.f32 	%f911, %f232, %f237;

BB0_2:
	ld.global.v2.u32 	{%r108, %r109}, [pixelID];
	ld.global.v2.u32 	{%r111, %r112}, [tileInfo];
	add.s32 	%r3, %r108, %r111;
	add.s32 	%r4, %r109, %r112;
	setp.eq.f32	%p8, %f910, 0f00000000;
	setp.eq.f32	%p9, %f909, 0f00000000;
	and.pred  	%p10, %p9, %p8;
	setp.eq.f32	%p11, %f911, 0f00000000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB0_131;
	bra.uni 	BB0_3;

BB0_131:
	ld.global.u32 	%r374, [imageEnabled];
	and.b32  	%r316, %r374, 1;
	setp.eq.b32	%p139, %r316, 1;
	@!%p139 bra 	BB0_133;
	bra.uni 	BB0_132;

BB0_132:
	cvt.u64.u32	%rd123, %r3;
	cvt.u64.u32	%rd124, %r4;
	mov.u64 	%rd127, image;
	cvta.global.u64 	%rd122, %rd127;
	mov.u64 	%rd126, 0;
	// inline asm
	call (%rd121), _rt_buffer_get_64, (%rd122, %r101, %r102, %rd123, %rd124, %rd126, %rd126);
	// inline asm
	mov.u16 	%rs36, 0;
	st.v4.u8 	[%rd121], {%rs36, %rs36, %rs36, %rs36};
	ld.global.u32 	%r374, [imageEnabled];

BB0_133:
	and.b32  	%r319, %r374, 8;
	setp.eq.s32	%p140, %r319, 0;
	@%p140 bra 	BB0_135;

	cvt.u64.u32	%rd130, %r3;
	cvt.u64.u32	%rd131, %r4;
	mov.u64 	%rd134, image_Mask;
	cvta.global.u64 	%rd129, %rd134;
	mov.u64 	%rd133, 0;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r101, %r101, %rd130, %rd131, %rd133, %rd133);
	// inline asm
	mov.f32 	%f892, 0f00000000;
	cvt.rzi.u32.f32	%r322, %f892;
	cvt.u16.u32	%rs37, %r322;
	mov.u16 	%rs38, 0;
	st.v2.u8 	[%rd128], {%rs37, %rs38};
	ld.global.u32 	%r374, [imageEnabled];

BB0_135:
	and.b32  	%r323, %r374, 4;
	setp.eq.s32	%p141, %r323, 0;
	@%p141 bra 	BB0_139;

	ld.global.u32 	%r324, [additive];
	setp.eq.s32	%p142, %r324, 0;
	cvt.u64.u32	%rd19, %r3;
	cvt.u64.u32	%rd20, %r4;
	@%p142 bra 	BB0_138;

	mov.u64 	%rd147, image_HDR;
	cvta.global.u64 	%rd136, %rd147;
	mov.u32 	%r328, 8;
	mov.u64 	%rd146, 0;
	// inline asm
	call (%rd135), _rt_buffer_get_64, (%rd136, %r101, %r328, %rd19, %rd20, %rd146, %rd146);
	// inline asm
	ld.v4.u16 	{%rs45, %rs46, %rs47, %rs48}, [%rd135];
	// inline asm
	{  cvt.f32.f16 %f893, %rs45;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f894, %rs46;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f895, %rs47;}

	// inline asm
	// inline asm
	call (%rd141), _rt_buffer_get_64, (%rd136, %r101, %r328, %rd19, %rd20, %rd146, %rd146);
	// inline asm
	add.f32 	%f896, %f893, 0f00000000;
	add.f32 	%f897, %f894, 0f00000000;
	add.f32 	%f898, %f895, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs44, %f898;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs43, %f897;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs42, %f896;}

	// inline asm
	mov.u16 	%rs49, 0;
	st.v4.u16 	[%rd141], {%rs42, %rs43, %rs44, %rs49};
	bra.uni 	BB0_139;

BB0_3:
	ld.global.v2.u32 	{%r121, %r122}, [pixelID];
	cvt.u64.u32	%rd30, %r121;
	cvt.u64.u32	%rd31, %r122;
	mov.u64 	%rd40, uvpos;
	cvta.global.u64 	%rd29, %rd40;
	mov.u32 	%r117, 12;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r101, %r117, %rd30, %rd31, %rd26, %rd26);
	// inline asm
	ld.f32 	%f9, [%rd28+8];
	ld.f32 	%f8, [%rd28+4];
	ld.f32 	%f7, [%rd28];
	mul.f32 	%f245, %f7, 0f3456BF95;
	mul.f32 	%f246, %f8, 0f3456BF95;
	mul.f32 	%f247, %f9, 0f3456BF95;
	abs.f32 	%f10, %f909;
	div.rn.f32 	%f248, %f245, %f10;
	abs.f32 	%f249, %f910;
	div.rn.f32 	%f250, %f246, %f249;
	abs.f32 	%f11, %f911;
	div.rn.f32 	%f251, %f247, %f11;
	abs.f32 	%f252, %f248;
	abs.f32 	%f253, %f250;
	abs.f32 	%f254, %f251;
	mov.f32 	%f255, 0f38D1B717;
	max.f32 	%f256, %f252, %f255;
	max.f32 	%f257, %f253, %f255;
	max.f32 	%f258, %f254, %f255;
	fma.rn.f32 	%f12, %f909, %f256, %f7;
	fma.rn.f32 	%f13, %f910, %f257, %f8;
	fma.rn.f32 	%f14, %f911, %f258, %f9;
	ld.global.v2.u32 	{%r125, %r126}, [pixelID];
	cvt.u64.u32	%rd36, %r125;
	cvt.u64.u32	%rd37, %r126;
	mov.u64 	%rd41, rnd_seeds;
	cvta.global.u64 	%rd35, %rd41;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r101, %r102, %rd36, %rd37, %rd26, %rd26);
	// inline asm
	ld.u32 	%r129, [%rd34];
	mad.lo.s32 	%r5, %r129, 1664525, 1013904223;
	ld.global.u32 	%r130, [lightMeshBufferSize];
	setp.eq.s32	%p14, %r130, 0;
	mov.pred 	%p13, 0;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r7, 0;
	@%p14 bra 	BB0_4;

	ld.global.f32 	%f15, [lightPointSize];
	mul.f32 	%f16, %f12, 0f3456BF95;
	mul.f32 	%f17, %f13, 0f3456BF95;
	mul.f32 	%f18, %f14, 0f3456BF95;
	and.b32  	%r133, %r5, 16777215;
	cvt.rn.f32.u32	%f266, %r133;
	mul.f32 	%f267, %f266, 0fB3800000;
	fma.rn.f32 	%f19, %f267, 0f3F333333, 0f3F800000;
	mov.f32 	%f20, 0f00000000;
	mov.u32 	%r343, 0;
	abs.f32 	%f390, %f17;
	abs.f32 	%f391, %f16;
	max.f32 	%f392, %f391, %f390;
	abs.f32 	%f393, %f18;
	max.f32 	%f394, %f392, %f393;
	mov.u32 	%r7, %r343;
	mov.f32 	%f21, %f20;
	mov.f32 	%f22, %f20;
	mov.f32 	%f23, %f20;
	mov.f32 	%f940, %f20;
	mov.f32 	%f941, %f20;
	mov.f32 	%f942, %f20;

BB0_6:
	mul.lo.s32 	%r8, %r343, 3;
	cvt.s64.s32	%rd44, %r8;
	mov.u64 	%rd48, lightMeshBuffer;
	cvta.global.u64 	%rd43, %rd48;
	mov.u32 	%r134, 1;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r134, %r117, %rd44, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f268, [%rd42];
	sub.f32 	%f269, %f268, %f7;
	ld.f32 	%f270, [%rd42+4];
	sub.f32 	%f271, %f270, %f8;
	ld.f32 	%f272, [%rd42+8];
	sub.f32 	%f273, %f272, %f9;
	mul.f32 	%f274, %f271, %f271;
	fma.rn.f32 	%f275, %f269, %f269, %f274;
	fma.rn.f32 	%f276, %f273, %f273, %f275;
	sqrt.rn.f32 	%f27, %f276;
	rcp.rn.f32 	%f277, %f27;
	mul.f32 	%f28, %f269, %f277;
	mul.f32 	%f29, %f271, %f277;
	mul.f32 	%f30, %f273, %f277;
	mul.f32 	%f278, %f910, %f29;
	fma.rn.f32 	%f279, %f909, %f28, %f278;
	fma.rn.f32 	%f31, %f911, %f30, %f279;
	setp.leu.f32	%p15, %f31, 0f00000000;
	@%p15 bra 	BB0_22;

	setp.ne.s32	%p17, %r1, 0;
	mul.f32 	%f280, %f27, %f27;
	mul.f32 	%f281, %f280, 0f40C90FDB;
	div.rn.f32 	%f282, %f15, %f281;
	add.f32 	%f32, %f282, %f282;
	setp.gt.f32	%p18, %f32, %f19;
	and.pred  	%p19, %p17, %p18;
	mov.pred 	%p144, -1;
	@%p19 bra 	BB0_24;

	ld.global.f32 	%f285, [lightInvCutoff];
	mul.f32 	%f33, %f27, %f285;
	mov.f32 	%f289, 0f40800000;
	abs.f32 	%f35, %f33;
	setp.lt.f32	%p20, %f35, 0f00800000;
	mul.f32 	%f291, %f35, 0f4B800000;
	selp.f32	%f292, 0fC3170000, 0fC2FE0000, %p20;
	selp.f32	%f293, %f291, %f35, %p20;
	mov.b32 	 %r136, %f293;
	and.b32  	%r137, %r136, 8388607;
	or.b32  	%r138, %r137, 1065353216;
	mov.b32 	 %f294, %r138;
	shr.u32 	%r139, %r136, 23;
	cvt.rn.f32.u32	%f295, %r139;
	add.f32 	%f296, %f292, %f295;
	setp.gt.f32	%p21, %f294, 0f3FB504F3;
	mul.f32 	%f297, %f294, 0f3F000000;
	add.f32 	%f298, %f296, 0f3F800000;
	selp.f32	%f299, %f297, %f294, %p21;
	selp.f32	%f300, %f298, %f296, %p21;
	add.f32 	%f301, %f299, 0fBF800000;
	add.f32 	%f284, %f299, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f283,%f284;
	// inline asm
	add.f32 	%f302, %f301, %f301;
	mul.f32 	%f303, %f283, %f302;
	mul.f32 	%f304, %f303, %f303;
	mov.f32 	%f305, 0f3C4CAF63;
	mov.f32 	%f306, 0f3B18F0FE;
	fma.rn.f32 	%f307, %f306, %f304, %f305;
	mov.f32 	%f308, 0f3DAAAABD;
	fma.rn.f32 	%f309, %f307, %f304, %f308;
	mul.rn.f32 	%f310, %f309, %f304;
	mul.rn.f32 	%f311, %f310, %f303;
	sub.f32 	%f312, %f301, %f303;
	neg.f32 	%f313, %f303;
	add.f32 	%f314, %f312, %f312;
	fma.rn.f32 	%f315, %f313, %f301, %f314;
	mul.rn.f32 	%f316, %f283, %f315;
	add.f32 	%f317, %f311, %f303;
	sub.f32 	%f318, %f303, %f317;
	add.f32 	%f319, %f311, %f318;
	add.f32 	%f320, %f316, %f319;
	add.f32 	%f321, %f317, %f320;
	sub.f32 	%f322, %f317, %f321;
	add.f32 	%f323, %f320, %f322;
	mov.f32 	%f324, 0f3F317200;
	mul.rn.f32 	%f325, %f300, %f324;
	mov.f32 	%f326, 0f35BFBE8E;
	mul.rn.f32 	%f327, %f300, %f326;
	add.f32 	%f328, %f325, %f321;
	sub.f32 	%f329, %f325, %f328;
	add.f32 	%f330, %f321, %f329;
	add.f32 	%f331, %f323, %f330;
	add.f32 	%f332, %f327, %f331;
	add.f32 	%f333, %f328, %f332;
	sub.f32 	%f334, %f328, %f333;
	add.f32 	%f335, %f332, %f334;
	mul.rn.f32 	%f336, %f289, %f333;
	neg.f32 	%f337, %f336;
	fma.rn.f32 	%f338, %f289, %f333, %f337;
	fma.rn.f32 	%f339, %f289, %f335, %f338;
	mov.f32 	%f340, 0f00000000;
	fma.rn.f32 	%f341, %f340, %f333, %f339;
	add.rn.f32 	%f342, %f336, %f341;
	neg.f32 	%f343, %f342;
	add.rn.f32 	%f344, %f336, %f343;
	add.rn.f32 	%f345, %f344, %f341;
	mov.b32 	 %r140, %f342;
	setp.eq.s32	%p22, %r140, 1118925336;
	add.s32 	%r141, %r140, -1;
	mov.b32 	 %f346, %r141;
	add.f32 	%f347, %f345, 0f37000000;
	selp.f32	%f348, %f346, %f342, %p22;
	selp.f32	%f36, %f347, %f345, %p22;
	mul.f32 	%f349, %f348, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f350, %f349;
	mov.f32 	%f351, 0fBF317200;
	fma.rn.f32 	%f352, %f350, %f351, %f348;
	mov.f32 	%f353, 0fB5BFBE8E;
	fma.rn.f32 	%f354, %f350, %f353, %f352;
	mul.f32 	%f355, %f354, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f356, %f355;
	add.f32 	%f357, %f350, 0f00000000;
	ex2.approx.f32 	%f358, %f357;
	mul.f32 	%f359, %f356, %f358;
	setp.lt.f32	%p23, %f348, 0fC2D20000;
	selp.f32	%f360, 0f00000000, %f359, %p23;
	setp.gt.f32	%p24, %f348, 0f42D20000;
	selp.f32	%f919, 0f7F800000, %f360, %p24;
	setp.eq.f32	%p25, %f919, 0f7F800000;
	@%p25 bra 	BB0_10;

	fma.rn.f32 	%f919, %f919, %f36, %f919;

BB0_10:
	mov.f32 	%f905, 0f40000000;
	cvt.rzi.f32.f32	%f904, %f905;
	add.f32 	%f903, %f904, %f904;
	mov.f32 	%f902, 0f40800000;
	sub.f32 	%f901, %f902, %f903;
	abs.f32 	%f900, %f901;
	setp.lt.f32	%p26, %f33, 0f00000000;
	setp.eq.f32	%p27, %f900, 0f3F800000;
	and.pred  	%p1, %p26, %p27;
	mov.b32 	 %r142, %f919;
	xor.b32  	%r143, %r142, -2147483648;
	mov.b32 	 %f361, %r143;
	selp.f32	%f921, %f361, %f919, %p1;
	setp.eq.f32	%p28, %f33, 0f00000000;
	@%p28 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.f32 	%f364, %f33, %f33;
	selp.f32	%f921, %f364, 0f00000000, %p27;
	bra.uni 	BB0_14;

BB0_11:
	setp.geu.f32	%p29, %f33, 0f00000000;
	@%p29 bra 	BB0_14;

	mov.f32 	%f908, 0f40800000;
	cvt.rzi.f32.f32	%f363, %f908;
	setp.neu.f32	%p30, %f363, 0f40800000;
	selp.f32	%f921, 0f7FFFFFFF, %f921, %p30;

BB0_14:
	add.f32 	%f365, %f35, 0f40800000;
	mov.b32 	 %r144, %f365;
	setp.lt.s32	%p32, %r144, 2139095040;
	@%p32 bra 	BB0_19;

	setp.gtu.f32	%p33, %f35, 0f7F800000;
	@%p33 bra 	BB0_18;
	bra.uni 	BB0_16;

BB0_18:
	add.f32 	%f921, %f33, 0f40800000;
	bra.uni 	BB0_19;

BB0_16:
	setp.neu.f32	%p34, %f35, 0f7F800000;
	@%p34 bra 	BB0_19;

	selp.f32	%f921, 0fFF800000, 0f7F800000, %p1;

BB0_19:
	mov.u32 	%r334, 1;
	mov.u64 	%rd163, lightMeshBuffer;
	cvta.global.u64 	%rd162, %rd163;
	mul.lo.s32 	%r333, %r343, 3;
	mov.f32 	%f366, 0f3F800000;
	sub.f32 	%f367, %f366, %f921;
	setp.eq.f32	%p35, %f33, 0f3F800000;
	selp.f32	%f368, 0f00000000, %f367, %p35;
	cvt.sat.f32.f32	%f369, %f368;
	mul.f32 	%f370, %f32, %f369;
	add.s32 	%r147, %r333, 1;
	cvt.s64.s32	%rd51, %r147;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd162, %r334, %r117, %rd51, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f371, [%rd49];
	mul.f32 	%f372, %f28, %f371;
	ld.f32 	%f373, [%rd49+4];
	mul.f32 	%f374, %f29, %f373;
	neg.f32 	%f375, %f374;
	sub.f32 	%f376, %f375, %f372;
	ld.f32 	%f377, [%rd49+8];
	mul.f32 	%f378, %f30, %f377;
	sub.f32 	%f379, %f376, %f378;
	cvt.sat.f32.f32	%f380, %f379;
	mul.f32 	%f47, %f370, %f380;
	cvt.sat.f32.f32	%f48, %f31;
	mul.f32 	%f381, %f47, %f48;
	setp.leu.f32	%p36, %f381, 0f3727C5AC;
	@%p36 bra 	BB0_21;

	mov.u32 	%r342, 1;
	mov.u64 	%rd165, lightMeshBuffer;
	cvta.global.u64 	%rd164, %rd165;
	mul.lo.s32 	%r341, %r343, 3;
	add.u64 	%rd56, %SP, 28;
	cvta.to.local.u64 	%rd63, %rd56;
	max.f32 	%f388, %f394, %f255;
	sub.f32 	%f389, %f27, %f388;
	mov.u32 	%r153, 1065353216;
	st.local.u32 	[%rd63], %r153;
	ld.global.u32 	%r148, [root];
	// inline asm
	call _rt_trace_64, (%r148, %f12, %f13, %f14, %f28, %f29, %f30, %r342, %f388, %f389, %rd56, %r102);
	// inline asm
	add.s32 	%r154, %r341, 2;
	cvt.s64.s32	%rd59, %r154;
	// inline asm
	call (%rd57), _rt_buffer_get_64, (%rd164, %r342, %r117, %rd59, %rd26, %rd26, %rd26);
	// inline asm
	ld.f32 	%f396, [%rd57];
	ld.local.f32 	%f397, [%rd63];
	mul.f32 	%f398, %f397, %f396;
	ld.f32 	%f399, [%rd57+4];
	mul.f32 	%f400, %f397, %f399;
	ld.f32 	%f401, [%rd57+8];
	mul.f32 	%f402, %f397, %f401;
	mul.f32 	%f403, %f47, %f398;
	mul.f32 	%f404, %f47, %f400;
	mul.f32 	%f405, %f47, %f402;
	fma.rn.f32 	%f23, %f48, %f403, %f23;
	fma.rn.f32 	%f22, %f48, %f404, %f22;
	fma.rn.f32 	%f21, %f48, %f405, %f21;
	add.f32 	%f20, %f20, %f397;
	fma.rn.f32 	%f942, %f28, %f397, %f942;
	fma.rn.f32 	%f941, %f29, %f397, %f941;
	fma.rn.f32 	%f940, %f30, %f397, %f940;

BB0_21:
	add.s32 	%r7, %r7, 1;

BB0_22:
	ld.global.u32 	%r155, [lightMeshBufferSize];
	add.s32 	%r343, %r343, 1;
	setp.lt.u32	%p38, %r343, %r155;
	@%p38 bra 	BB0_6;
	bra.uni 	BB0_23;

BB0_4:
	mov.f32 	%f21, %f20;
	mov.f32 	%f22, %f20;
	mov.f32 	%f23, %f20;
	mov.f32 	%f940, %f20;
	mov.f32 	%f941, %f20;
	mov.f32 	%f942, %f20;

BB0_23:
	mov.pred 	%p144, %p13;

BB0_24:
	cvt.rn.f32.s32	%f406, %r7;
	mov.f32 	%f407, 0f3F800000;
	max.f32 	%f408, %f406, %f407;
	rcp.rn.f32 	%f409, %f408;
	mul.f32 	%f976, %f23, %f409;
	mul.f32 	%f977, %f22, %f409;
	mul.f32 	%f978, %f21, %f409;
	div.rn.f32 	%f979, %f20, %f408;
	@!%p144 bra 	BB0_77;
	bra.uni 	BB0_25;

BB0_25:
	abs.f32 	%f907, %f911;
	abs.f32 	%f906, %f909;
	setp.gt.f32	%p39, %f906, %f907;
	neg.f32 	%f416, %f910;
	selp.f32	%f417, %f416, 0f00000000, %p39;
	neg.f32 	%f418, %f911;
	selp.f32	%f419, %f909, %f418, %p39;
	selp.f32	%f420, 0f00000000, %f910, %p39;
	mul.f32 	%f421, %f419, %f419;
	fma.rn.f32 	%f422, %f417, %f417, %f421;
	fma.rn.f32 	%f423, %f420, %f420, %f422;
	sqrt.rn.f32 	%f424, %f423;
	rcp.rn.f32 	%f425, %f424;
	mul.f32 	%f81, %f417, %f425;
	mul.f32 	%f82, %f419, %f425;
	mul.f32 	%f83, %f420, %f425;
	mov.f32 	%f415, 0f00000000;
	setp.lt.s32	%p40, %r1, 1;
	mov.f32 	%f949, %f415;
	mov.f32 	%f950, %f415;
	mov.f32 	%f951, %f415;
	mov.f32 	%f940, %f415;
	mov.f32 	%f941, %f415;
	mov.f32 	%f942, %f415;
	@%p40 bra 	BB0_76;

	mad.lo.s32 	%r350, %r129, 1664525, 1013904223;
	cvt.rn.f32.s32	%f432, %r1;
	rcp.rn.f32 	%f84, %f432;
	add.u64 	%rd65, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd65;
	mul.f32 	%f85, %f12, 0f3456BF95;
	mul.f32 	%f86, %f13, 0f3456BF95;
	mul.f32 	%f87, %f14, 0f3456BF95;
	add.u64 	%rd66, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd66;
	mul.f32 	%f433, %f909, %f82;
	mul.f32 	%f434, %f910, %f81;
	sub.f32 	%f88, %f434, %f433;
	mul.f32 	%f435, %f911, %f81;
	mul.f32 	%f436, %f909, %f83;
	sub.f32 	%f89, %f436, %f435;
	mul.f32 	%f437, %f910, %f83;
	mul.f32 	%f438, %f911, %f82;
	sub.f32 	%f90, %f438, %f437;
	mov.f32 	%f949, 0f00000000;
	mov.u32 	%r156, 0;
	abs.f32 	%f439, %f86;
	abs.f32 	%f440, %f85;
	max.f32 	%f441, %f440, %f439;
	abs.f32 	%f442, %f87;
	max.f32 	%f443, %f441, %f442;
	mov.u32 	%r347, %r156;
	mov.f32 	%f950, %f949;
	mov.f32 	%f951, %f949;
	mov.f32 	%f940, %f949;
	mov.f32 	%f941, %f949;
	mov.f32 	%f942, %f949;

BB0_27:
	cvt.rn.f32.s32	%f97, %r347;
	max.f32 	%f98, %f443, %f255;
	mov.u32 	%r349, %r156;

BB0_28:
	mad.lo.s32 	%r158, %r350, 1664525, 1013904223;
	and.b32  	%r159, %r158, 16777215;
	cvt.rn.f32.u32	%f445, %r159;
	fma.rn.f32 	%f446, %f445, 0f33800000, %f97;
	mul.f32 	%f105, %f84, %f446;
	mad.lo.s32 	%r350, %r158, 1664525, 1013904223;
	and.b32  	%r160, %r350, 16777215;
	cvt.rn.f32.u32	%f447, %r160;
	cvt.rn.f32.s32	%f448, %r349;
	fma.rn.f32 	%f449, %f447, 0f33800000, %f448;
	mul.f32 	%f450, %f84, %f449;
	mul.f32 	%f451, %f105, %f105;
	sub.f32 	%f453, %f407, %f451;
	mov.f32 	%f454, 0f00000000;
	max.f32 	%f455, %f454, %f453;
	sqrt.rn.f32 	%f106, %f455;
	mul.f32 	%f961, %f450, 0f40C90FDB;
	abs.f32 	%f108, %f961;
	setp.neu.f32	%p41, %f108, 0f7F800000;
	mov.f32 	%f955, %f961;
	@%p41 bra 	BB0_30;

	mul.rn.f32 	%f955, %f961, %f454;

BB0_30:
	mul.f32 	%f457, %f955, 0f3F22F983;
	cvt.rni.s32.f32	%r360, %f457;
	cvt.rn.f32.s32	%f458, %r360;
	neg.f32 	%f459, %f458;
	mov.f32 	%f460, 0f3FC90FDA;
	fma.rn.f32 	%f461, %f459, %f460, %f955;
	mov.f32 	%f462, 0f33A22168;
	fma.rn.f32 	%f463, %f459, %f462, %f461;
	mov.f32 	%f464, 0f27C234C5;
	fma.rn.f32 	%f956, %f459, %f464, %f463;
	abs.f32 	%f465, %f955;
	setp.leu.f32	%p42, %f465, 0f47CE4780;
	@%p42 bra 	BB0_41;

	mov.b32 	 %r19, %f955;
	shr.u32 	%r20, %r19, 23;
	shl.b32 	%r163, %r19, 8;
	or.b32  	%r21, %r163, -2147483648;
	mov.u32 	%r351, 0;
	mov.u64 	%rd167, 0;
	mov.u64 	%rd166, %rd2;
	mov.u32 	%r352, %r351;

BB0_32:
	.pragma "nounroll";
	shl.b64 	%rd68, %rd167, 2;
	mov.u64 	%rd69, __cudart_i2opi_f;
	add.s64 	%rd70, %rd69, %rd68;
	ld.const.u32 	%r166, [%rd70];
	// inline asm
	{
	mad.lo.cc.u32   %r164, %r166, %r21, %r352;
	madc.hi.u32     %r352, %r166, %r21,  0;
	}
	// inline asm
	st.local.u32 	[%rd166], %r164;
	add.s32 	%r351, %r351, 1;
	cvt.s64.s32	%rd167, %r351;
	mul.wide.s32 	%rd71, %r351, 4;
	add.s64 	%rd166, %rd2, %rd71;
	setp.ne.s32	%p43, %r351, 6;
	@%p43 bra 	BB0_32;

	and.b32  	%r169, %r20, 255;
	add.s32 	%r170, %r169, -128;
	shr.u32 	%r171, %r170, 5;
	and.b32  	%r26, %r19, -2147483648;
	st.local.u32 	[%rd2+24], %r352;
	mov.u32 	%r172, 6;
	sub.s32 	%r173, %r172, %r171;
	mul.wide.s32 	%rd72, %r173, 4;
	add.s64 	%rd9, %rd2, %rd72;
	ld.local.u32 	%r353, [%rd9];
	ld.local.u32 	%r354, [%rd9+-4];
	and.b32  	%r29, %r20, 31;
	setp.eq.s32	%p44, %r29, 0;
	@%p44 bra 	BB0_35;

	mov.u32 	%r174, 32;
	sub.s32 	%r175, %r174, %r29;
	shr.u32 	%r176, %r354, %r175;
	shl.b32 	%r177, %r353, %r29;
	add.s32 	%r353, %r176, %r177;
	ld.local.u32 	%r178, [%rd9+-8];
	shr.u32 	%r179, %r178, %r175;
	shl.b32 	%r180, %r354, %r29;
	add.s32 	%r354, %r179, %r180;

BB0_35:
	shr.u32 	%r181, %r354, 30;
	shl.b32 	%r182, %r353, 2;
	add.s32 	%r355, %r181, %r182;
	shl.b32 	%r35, %r354, 2;
	shr.u32 	%r183, %r355, 31;
	shr.u32 	%r184, %r353, 30;
	add.s32 	%r36, %r183, %r184;
	setp.eq.s32	%p45, %r183, 0;
	@%p45 bra 	BB0_36;
	bra.uni 	BB0_37;

BB0_36:
	mov.u32 	%r356, %r26;
	mov.u32 	%r357, %r35;
	bra.uni 	BB0_38;

BB0_37:
	not.b32 	%r185, %r355;
	neg.s32 	%r357, %r35;
	setp.eq.s32	%p46, %r35, 0;
	selp.u32	%r186, 1, 0, %p46;
	add.s32 	%r355, %r186, %r185;
	xor.b32  	%r356, %r26, -2147483648;

BB0_38:
	clz.b32 	%r359, %r355;
	setp.eq.s32	%p47, %r359, 0;
	shl.b32 	%r187, %r355, %r359;
	mov.u32 	%r188, 32;
	sub.s32 	%r189, %r188, %r359;
	shr.u32 	%r190, %r357, %r189;
	add.s32 	%r191, %r190, %r187;
	selp.b32	%r44, %r355, %r191, %p47;
	mov.u32 	%r192, -921707870;
	mul.hi.u32 	%r358, %r44, %r192;
	setp.eq.s32	%p48, %r26, 0;
	neg.s32 	%r193, %r36;
	selp.b32	%r360, %r36, %r193, %p48;
	setp.lt.s32	%p49, %r358, 1;
	@%p49 bra 	BB0_40;

	mul.lo.s32 	%r194, %r44, -921707870;
	shr.u32 	%r195, %r194, 31;
	shl.b32 	%r196, %r358, 1;
	add.s32 	%r358, %r195, %r196;
	add.s32 	%r359, %r359, 1;

BB0_40:
	mov.u32 	%r197, 126;
	sub.s32 	%r198, %r197, %r359;
	shl.b32 	%r199, %r198, 23;
	add.s32 	%r200, %r358, 1;
	shr.u32 	%r201, %r200, 7;
	add.s32 	%r202, %r201, 1;
	shr.u32 	%r203, %r202, 1;
	add.s32 	%r204, %r203, %r199;
	or.b32  	%r205, %r204, %r356;
	mov.b32 	 %f956, %r205;

BB0_41:
	mul.rn.f32 	%f114, %f956, %f956;
	add.s32 	%r52, %r360, 1;
	and.b32  	%r53, %r52, 1;
	setp.eq.s32	%p50, %r53, 0;
	@%p50 bra 	BB0_43;
	bra.uni 	BB0_42;

BB0_43:
	mov.f32 	%f468, 0f3C08839E;
	mov.f32 	%f469, 0fB94CA1F9;
	fma.rn.f32 	%f957, %f469, %f114, %f468;
	bra.uni 	BB0_44;

BB0_42:
	mov.f32 	%f466, 0fBAB6061A;
	mov.f32 	%f467, 0f37CCF5CE;
	fma.rn.f32 	%f957, %f467, %f114, %f466;

BB0_44:
	@%p50 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f473, 0fBE2AAAA3;
	fma.rn.f32 	%f474, %f957, %f114, %f473;
	fma.rn.f32 	%f958, %f474, %f114, %f454;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f470, 0f3D2AAAA5;
	fma.rn.f32 	%f471, %f957, %f114, %f470;
	mov.f32 	%f472, 0fBF000000;
	fma.rn.f32 	%f958, %f471, %f114, %f472;

BB0_47:
	fma.rn.f32 	%f959, %f958, %f956, %f956;
	@%p50 bra 	BB0_49;

	fma.rn.f32 	%f959, %f958, %f114, %f407;

BB0_49:
	and.b32  	%r206, %r52, 2;
	setp.eq.s32	%p53, %r206, 0;
	@%p53 bra 	BB0_51;

	mov.f32 	%f478, 0fBF800000;
	fma.rn.f32 	%f959, %f959, %f478, %f454;

BB0_51:
	@%p41 bra 	BB0_53;

	mul.rn.f32 	%f961, %f961, %f454;

BB0_53:
	mul.f32 	%f480, %f961, 0f3F22F983;
	cvt.rni.s32.f32	%r370, %f480;
	cvt.rn.f32.s32	%f481, %r370;
	neg.f32 	%f482, %f481;
	fma.rn.f32 	%f484, %f482, %f460, %f961;
	fma.rn.f32 	%f486, %f482, %f462, %f484;
	fma.rn.f32 	%f962, %f482, %f464, %f486;
	abs.f32 	%f488, %f961;
	setp.leu.f32	%p55, %f488, 0f47CE4780;
	@%p55 bra 	BB0_64;

	mov.b32 	 %r55, %f961;
	shr.u32 	%r56, %r55, 23;
	shl.b32 	%r209, %r55, 8;
	or.b32  	%r57, %r209, -2147483648;
	mov.u32 	%r361, 0;
	mov.u64 	%rd168, %rd2;
	mov.u64 	%rd169, %rd26;
	mov.u32 	%r362, %r361;

BB0_55:
	.pragma "nounroll";
	shl.b64 	%rd74, %rd169, 2;
	mov.u64 	%rd75, __cudart_i2opi_f;
	add.s64 	%rd76, %rd75, %rd74;
	ld.const.u32 	%r212, [%rd76];
	// inline asm
	{
	mad.lo.cc.u32   %r210, %r212, %r57, %r362;
	madc.hi.u32     %r362, %r212, %r57,  0;
	}
	// inline asm
	st.local.u32 	[%rd168], %r210;
	add.s32 	%r361, %r361, 1;
	cvt.s64.s32	%rd169, %r361;
	mul.wide.s32 	%rd77, %r361, 4;
	add.s64 	%rd168, %rd2, %rd77;
	setp.ne.s32	%p56, %r361, 6;
	@%p56 bra 	BB0_55;

	and.b32  	%r215, %r56, 255;
	add.s32 	%r216, %r215, -128;
	shr.u32 	%r217, %r216, 5;
	and.b32  	%r62, %r55, -2147483648;
	st.local.u32 	[%rd2+24], %r362;
	mov.u32 	%r218, 6;
	sub.s32 	%r219, %r218, %r217;
	mul.wide.s32 	%rd78, %r219, 4;
	add.s64 	%rd15, %rd2, %rd78;
	ld.local.u32 	%r363, [%rd15];
	ld.local.u32 	%r364, [%rd15+-4];
	and.b32  	%r65, %r56, 31;
	setp.eq.s32	%p57, %r65, 0;
	@%p57 bra 	BB0_58;

	mov.u32 	%r220, 32;
	sub.s32 	%r221, %r220, %r65;
	shr.u32 	%r222, %r364, %r221;
	shl.b32 	%r223, %r363, %r65;
	add.s32 	%r363, %r222, %r223;
	ld.local.u32 	%r224, [%rd15+-8];
	shr.u32 	%r225, %r224, %r221;
	shl.b32 	%r226, %r364, %r65;
	add.s32 	%r364, %r225, %r226;

BB0_58:
	shr.u32 	%r227, %r364, 30;
	shl.b32 	%r228, %r363, 2;
	add.s32 	%r365, %r227, %r228;
	shl.b32 	%r71, %r364, 2;
	shr.u32 	%r229, %r365, 31;
	shr.u32 	%r230, %r363, 30;
	add.s32 	%r72, %r229, %r230;
	setp.eq.s32	%p58, %r229, 0;
	@%p58 bra 	BB0_59;
	bra.uni 	BB0_60;

BB0_59:
	mov.u32 	%r366, %r62;
	mov.u32 	%r367, %r71;
	bra.uni 	BB0_61;

BB0_60:
	not.b32 	%r231, %r365;
	neg.s32 	%r367, %r71;
	setp.eq.s32	%p59, %r71, 0;
	selp.u32	%r232, 1, 0, %p59;
	add.s32 	%r365, %r232, %r231;
	xor.b32  	%r366, %r62, -2147483648;

BB0_61:
	clz.b32 	%r369, %r365;
	setp.eq.s32	%p60, %r369, 0;
	shl.b32 	%r233, %r365, %r369;
	mov.u32 	%r234, 32;
	sub.s32 	%r235, %r234, %r369;
	shr.u32 	%r236, %r367, %r235;
	add.s32 	%r237, %r236, %r233;
	selp.b32	%r80, %r365, %r237, %p60;
	mov.u32 	%r238, -921707870;
	mul.hi.u32 	%r368, %r80, %r238;
	setp.eq.s32	%p61, %r62, 0;
	neg.s32 	%r239, %r72;
	selp.b32	%r370, %r72, %r239, %p61;
	setp.lt.s32	%p62, %r368, 1;
	@%p62 bra 	BB0_63;

	mul.lo.s32 	%r240, %r80, -921707870;
	shr.u32 	%r241, %r240, 31;
	shl.b32 	%r242, %r368, 1;
	add.s32 	%r368, %r241, %r242;
	add.s32 	%r369, %r369, 1;

BB0_63:
	mov.u32 	%r243, 126;
	sub.s32 	%r244, %r243, %r369;
	shl.b32 	%r245, %r244, 23;
	add.s32 	%r246, %r368, 1;
	shr.u32 	%r247, %r246, 7;
	add.s32 	%r248, %r247, 1;
	shr.u32 	%r249, %r248, 1;
	add.s32 	%r250, %r249, %r245;
	or.b32  	%r251, %r250, %r366;
	mov.b32 	 %f962, %r251;

BB0_64:
	mul.rn.f32 	%f131, %f962, %f962;
	and.b32  	%r88, %r370, 1;
	setp.eq.s32	%p63, %r88, 0;
	@%p63 bra 	BB0_66;
	bra.uni 	BB0_65;

BB0_66:
	mov.f32 	%f491, 0f3C08839E;
	mov.f32 	%f492, 0fB94CA1F9;
	fma.rn.f32 	%f963, %f492, %f131, %f491;
	bra.uni 	BB0_67;

BB0_65:
	mov.f32 	%f489, 0fBAB6061A;
	mov.f32 	%f490, 0f37CCF5CE;
	fma.rn.f32 	%f963, %f490, %f131, %f489;

BB0_67:
	@%p63 bra 	BB0_69;
	bra.uni 	BB0_68;

BB0_69:
	mov.f32 	%f496, 0fBE2AAAA3;
	fma.rn.f32 	%f497, %f963, %f131, %f496;
	fma.rn.f32 	%f964, %f497, %f131, %f454;
	bra.uni 	BB0_70;

BB0_68:
	mov.f32 	%f493, 0f3D2AAAA5;
	fma.rn.f32 	%f494, %f963, %f131, %f493;
	mov.f32 	%f495, 0fBF000000;
	fma.rn.f32 	%f964, %f494, %f131, %f495;

BB0_70:
	fma.rn.f32 	%f965, %f964, %f962, %f962;
	@%p63 bra 	BB0_72;

	fma.rn.f32 	%f965, %f964, %f131, %f407;

BB0_72:
	and.b32  	%r252, %r370, 2;
	setp.eq.s32	%p66, %r252, 0;
	@%p66 bra 	BB0_74;

	mov.f32 	%f501, 0fBF800000;
	fma.rn.f32 	%f965, %f965, %f501, %f454;

BB0_74:
	mul.f32 	%f510, %f106, %f959;
	mul.f32 	%f511, %f106, %f965;
	mul.f32 	%f512, %f81, %f511;
	mul.f32 	%f513, %f82, %f511;
	mul.f32 	%f514, %f83, %f511;
	fma.rn.f32 	%f515, %f90, %f510, %f512;
	fma.rn.f32 	%f516, %f89, %f510, %f513;
	fma.rn.f32 	%f517, %f88, %f510, %f514;
	fma.rn.f32 	%f505, %f909, %f105, %f515;
	fma.rn.f32 	%f506, %f910, %f105, %f516;
	fma.rn.f32 	%f507, %f911, %f105, %f517;
	mov.u32 	%r254, 0;
	st.local.u32 	[%rd3+8], %r254;
	st.local.u32 	[%rd3+4], %r254;
	st.local.u32 	[%rd3], %r254;
	ld.global.u32 	%r253, [root];
	mov.f32 	%f509, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r253, %f12, %f13, %f14, %f505, %f506, %f507, %r254, %f98, %f509, %rd66, %r117);
	// inline asm
	ld.local.f32 	%f518, [%rd3];
	max.f32 	%f520, %f518, %f454;
	ld.local.f32 	%f521, [%rd3+4];
	max.f32 	%f522, %f521, %f454;
	ld.local.f32 	%f523, [%rd3+8];
	max.f32 	%f524, %f523, %f454;
	setp.lt.f32	%p67, %f518, 0f00000000;
	selp.f32	%f525, 0f00000000, 0f3F800000, %p67;
	fma.rn.f32 	%f942, %f505, %f525, %f942;
	fma.rn.f32 	%f941, %f506, %f525, %f941;
	fma.rn.f32 	%f940, %f507, %f525, %f940;
	mul.f32 	%f526, %f910, %f506;
	fma.rn.f32 	%f527, %f909, %f505, %f526;
	fma.rn.f32 	%f528, %f911, %f507, %f527;
	cvt.sat.f32.f32	%f529, %f528;
	fma.rn.f32 	%f951, %f520, %f529, %f951;
	fma.rn.f32 	%f950, %f522, %f529, %f950;
	fma.rn.f32 	%f949, %f524, %f529, %f949;
	add.s32 	%r349, %r349, 1;
	setp.lt.s32	%p68, %r349, %r1;
	@%p68 bra 	BB0_28;

	add.s32 	%r347, %r347, 1;
	setp.lt.s32	%p69, %r347, %r1;
	@%p69 bra 	BB0_27;

BB0_76:
	mul.lo.s32 	%r256, %r1, %r1;
	cvt.rn.f32.s32	%f530, %r256;
	rcp.rn.f32 	%f531, %f530;
	mul.f32 	%f532, %f951, %f531;
	mul.f32 	%f533, %f950, %f531;
	mul.f32 	%f534, %f949, %f531;
	div.rn.f32 	%f979, %f415, %f530;
	fma.rn.f32 	%f976, %f951, %f531, %f532;
	fma.rn.f32 	%f977, %f950, %f531, %f533;
	fma.rn.f32 	%f978, %f949, %f531, %f534;

BB0_77:
	ld.global.u32 	%r372, [imageEnabled];
	and.b32  	%r257, %r372, 8;
	setp.eq.s32	%p70, %r257, 0;
	@%p70 bra 	BB0_90;

	mov.u32 	%r335, 2;
	cvt.u64.u32	%rd82, %r3;
	cvt.u64.u32	%rd83, %r4;
	mov.u64 	%rd86, image_Mask;
	cvta.global.u64 	%rd81, %rd86;
	// inline asm
	call (%rd80), _rt_buffer_get_64, (%rd81, %r335, %r335, %rd82, %rd83, %rd26, %rd26);
	// inline asm
	mov.f32 	%f538, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f539, %f538;
	fma.rn.f32 	%f540, %f539, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f166, %f540;
	abs.f32 	%f167, %f979;
	setp.lt.f32	%p71, %f167, 0f00800000;
	mul.f32 	%f541, %f167, 0f4B800000;
	selp.f32	%f542, 0fC3170000, 0fC2FE0000, %p71;
	selp.f32	%f543, %f541, %f167, %p71;
	mov.b32 	 %r260, %f543;
	and.b32  	%r261, %r260, 8388607;
	or.b32  	%r262, %r261, 1065353216;
	mov.b32 	 %f544, %r262;
	shr.u32 	%r263, %r260, 23;
	cvt.rn.f32.u32	%f545, %r263;
	add.f32 	%f546, %f542, %f545;
	setp.gt.f32	%p72, %f544, 0f3FB504F3;
	mul.f32 	%f547, %f544, 0f3F000000;
	add.f32 	%f548, %f546, 0f3F800000;
	selp.f32	%f549, %f547, %f544, %p72;
	selp.f32	%f550, %f548, %f546, %p72;
	add.f32 	%f551, %f549, 0fBF800000;
	add.f32 	%f537, %f549, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f536,%f537;
	// inline asm
	add.f32 	%f552, %f551, %f551;
	mul.f32 	%f553, %f536, %f552;
	mul.f32 	%f554, %f553, %f553;
	mov.f32 	%f555, 0f3C4CAF63;
	mov.f32 	%f556, 0f3B18F0FE;
	fma.rn.f32 	%f557, %f556, %f554, %f555;
	mov.f32 	%f558, 0f3DAAAABD;
	fma.rn.f32 	%f559, %f557, %f554, %f558;
	mul.rn.f32 	%f560, %f559, %f554;
	mul.rn.f32 	%f561, %f560, %f553;
	sub.f32 	%f562, %f551, %f553;
	neg.f32 	%f563, %f553;
	add.f32 	%f564, %f562, %f562;
	fma.rn.f32 	%f565, %f563, %f551, %f564;
	mul.rn.f32 	%f566, %f536, %f565;
	add.f32 	%f567, %f561, %f553;
	sub.f32 	%f568, %f553, %f567;
	add.f32 	%f569, %f561, %f568;
	add.f32 	%f570, %f566, %f569;
	add.f32 	%f571, %f567, %f570;
	sub.f32 	%f572, %f567, %f571;
	add.f32 	%f573, %f570, %f572;
	mov.f32 	%f574, 0f3F317200;
	mul.rn.f32 	%f575, %f550, %f574;
	mov.f32 	%f576, 0f35BFBE8E;
	mul.rn.f32 	%f577, %f550, %f576;
	add.f32 	%f578, %f575, %f571;
	sub.f32 	%f579, %f575, %f578;
	add.f32 	%f580, %f571, %f579;
	add.f32 	%f581, %f573, %f580;
	add.f32 	%f582, %f577, %f581;
	add.f32 	%f583, %f578, %f582;
	sub.f32 	%f584, %f578, %f583;
	add.f32 	%f585, %f582, %f584;
	mov.f32 	%f586, 0f3EE8BA2E;
	mul.rn.f32 	%f587, %f586, %f583;
	neg.f32 	%f588, %f587;
	fma.rn.f32 	%f589, %f586, %f583, %f588;
	fma.rn.f32 	%f590, %f586, %f585, %f589;
	mov.f32 	%f591, 0f00000000;
	fma.rn.f32 	%f592, %f591, %f583, %f590;
	add.rn.f32 	%f593, %f587, %f592;
	neg.f32 	%f594, %f593;
	add.rn.f32 	%f595, %f587, %f594;
	add.rn.f32 	%f596, %f595, %f592;
	mov.b32 	 %r264, %f593;
	setp.eq.s32	%p73, %r264, 1118925336;
	add.s32 	%r265, %r264, -1;
	mov.b32 	 %f597, %r265;
	add.f32 	%f598, %f596, 0f37000000;
	selp.f32	%f599, %f597, %f593, %p73;
	selp.f32	%f168, %f598, %f596, %p73;
	mul.f32 	%f600, %f599, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f601, %f600;
	mov.f32 	%f602, 0fBF317200;
	fma.rn.f32 	%f603, %f601, %f602, %f599;
	mov.f32 	%f604, 0fB5BFBE8E;
	fma.rn.f32 	%f605, %f601, %f604, %f603;
	mul.f32 	%f606, %f605, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f607, %f606;
	add.f32 	%f608, %f601, 0f00000000;
	ex2.approx.f32 	%f609, %f608;
	mul.f32 	%f610, %f607, %f609;
	setp.lt.f32	%p74, %f599, 0fC2D20000;
	selp.f32	%f611, 0f00000000, %f610, %p74;
	setp.gt.f32	%p75, %f599, 0f42D20000;
	selp.f32	%f980, 0f7F800000, %f611, %p75;
	setp.eq.f32	%p76, %f980, 0f7F800000;
	@%p76 bra 	BB0_80;

	fma.rn.f32 	%f980, %f980, %f168, %f980;

BB0_80:
	setp.lt.f32	%p77, %f979, 0f00000000;
	setp.eq.f32	%p78, %f166, 0f3F800000;
	and.pred  	%p3, %p77, %p78;
	mov.b32 	 %r266, %f980;
	xor.b32  	%r267, %r266, -2147483648;
	mov.b32 	 %f612, %r267;
	selp.f32	%f982, %f612, %f980, %p3;
	setp.eq.f32	%p79, %f979, 0f00000000;
	@%p79 bra 	BB0_83;
	bra.uni 	BB0_81;

BB0_83:
	add.f32 	%f615, %f979, %f979;
	selp.f32	%f982, %f615, 0f00000000, %p78;
	bra.uni 	BB0_84;

BB0_138:
	mov.u64 	%rd154, image_HDR;
	cvta.global.u64 	%rd149, %rd154;
	mov.u32 	%r330, 8;
	mov.u64 	%rd153, 0;
	// inline asm
	call (%rd148), _rt_buffer_get_64, (%rd149, %r101, %r330, %rd19, %rd20, %rd153, %rd153);
	// inline asm
	mov.f32 	%f899, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs50, %f899;}

	// inline asm
	mov.u16 	%rs51, 0;
	st.v4.u16 	[%rd148], {%rs50, %rs50, %rs50, %rs51};

BB0_139:
	ld.global.u8 	%rs52, [imageEnabled];
	and.b16  	%rs53, %rs52, 64;
	setp.eq.s16	%p143, %rs53, 0;
	@%p143 bra 	BB0_141;

	cvt.u64.u32	%rd157, %r3;
	cvt.u64.u32	%rd158, %r4;
	mov.u64 	%rd161, image_Dir;
	cvta.global.u64 	%rd156, %rd161;
	mov.u64 	%rd160, 0;
	// inline asm
	call (%rd155), _rt_buffer_get_64, (%rd156, %r101, %r102, %rd157, %rd158, %rd160, %rd160);
	// inline asm
	mov.u16 	%rs54, 0;
	st.v4.u8 	[%rd155], {%rs54, %rs54, %rs54, %rs54};
	bra.uni 	BB0_141;

BB0_81:
	setp.geu.f32	%p80, %f979, 0f00000000;
	@%p80 bra 	BB0_84;

	cvt.rzi.f32.f32	%f614, %f586;
	setp.neu.f32	%p81, %f614, 0f3EE8BA2E;
	selp.f32	%f982, 0f7FFFFFFF, %f982, %p81;

BB0_84:
	add.f32 	%f616, %f167, 0f3EE8BA2E;
	mov.b32 	 %r268, %f616;
	setp.lt.s32	%p83, %r268, 2139095040;
	@%p83 bra 	BB0_89;

	setp.gtu.f32	%p84, %f167, 0f7F800000;
	@%p84 bra 	BB0_88;
	bra.uni 	BB0_86;

BB0_88:
	add.f32 	%f982, %f979, 0f3EE8BA2E;
	bra.uni 	BB0_89;

BB0_86:
	setp.neu.f32	%p85, %f167, 0f7F800000;
	@%p85 bra 	BB0_89;

	selp.f32	%f982, 0fFF800000, 0f7F800000, %p3;

BB0_89:
	mul.f32 	%f617, %f982, 0f437F0000;
	setp.eq.f32	%p86, %f979, 0f3F800000;
	selp.f32	%f618, 0f437F0000, %f617, %p86;
	cvt.rzi.u32.f32	%r269, %f618;
	cvt.u16.u32	%rs10, %r269;
	mov.u16 	%rs11, 255;
	st.v2.u8 	[%rd80], {%rs10, %rs11};
	ld.global.u32 	%r372, [imageEnabled];

BB0_90:
	ld.global.f32 	%f619, [lightColor];
	mul.f32 	%f179, %f976, %f619;
	ld.global.f32 	%f620, [lightColor+4];
	mul.f32 	%f180, %f977, %f620;
	ld.global.f32 	%f621, [lightColor+8];
	mul.f32 	%f181, %f978, %f621;
	and.b32  	%r270, %r372, 1;
	setp.eq.b32	%p87, %r270, 1;
	@!%p87 bra 	BB0_125;
	bra.uni 	BB0_91;

BB0_91:
	mov.f32 	%f624, 0f3E666666;
	cvt.rzi.f32.f32	%f625, %f624;
	fma.rn.f32 	%f626, %f625, 0fC0000000, 0f3EE66666;
	abs.f32 	%f182, %f626;
	abs.f32 	%f183, %f179;
	setp.lt.f32	%p88, %f183, 0f00800000;
	mul.f32 	%f627, %f183, 0f4B800000;
	selp.f32	%f628, 0fC3170000, 0fC2FE0000, %p88;
	selp.f32	%f629, %f627, %f183, %p88;
	mov.b32 	 %r271, %f629;
	and.b32  	%r272, %r271, 8388607;
	or.b32  	%r273, %r272, 1065353216;
	mov.b32 	 %f630, %r273;
	shr.u32 	%r274, %r271, 23;
	cvt.rn.f32.u32	%f631, %r274;
	add.f32 	%f632, %f628, %f631;
	setp.gt.f32	%p89, %f630, 0f3FB504F3;
	mul.f32 	%f633, %f630, 0f3F000000;
	add.f32 	%f634, %f632, 0f3F800000;
	selp.f32	%f635, %f633, %f630, %p89;
	selp.f32	%f636, %f634, %f632, %p89;
	add.f32 	%f637, %f635, 0fBF800000;
	add.f32 	%f623, %f635, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f622,%f623;
	// inline asm
	add.f32 	%f638, %f637, %f637;
	mul.f32 	%f639, %f622, %f638;
	mul.f32 	%f640, %f639, %f639;
	mov.f32 	%f641, 0f3C4CAF63;
	mov.f32 	%f642, 0f3B18F0FE;
	fma.rn.f32 	%f643, %f642, %f640, %f641;
	mov.f32 	%f644, 0f3DAAAABD;
	fma.rn.f32 	%f645, %f643, %f640, %f644;
	mul.rn.f32 	%f646, %f645, %f640;
	mul.rn.f32 	%f647, %f646, %f639;
	sub.f32 	%f648, %f637, %f639;
	neg.f32 	%f649, %f639;
	add.f32 	%f650, %f648, %f648;
	fma.rn.f32 	%f651, %f649, %f637, %f650;
	mul.rn.f32 	%f652, %f622, %f651;
	add.f32 	%f653, %f647, %f639;
	sub.f32 	%f654, %f639, %f653;
	add.f32 	%f655, %f647, %f654;
	add.f32 	%f656, %f652, %f655;
	add.f32 	%f657, %f653, %f656;
	sub.f32 	%f658, %f653, %f657;
	add.f32 	%f659, %f656, %f658;
	mov.f32 	%f660, 0f3F317200;
	mul.rn.f32 	%f661, %f636, %f660;
	mov.f32 	%f662, 0f35BFBE8E;
	mul.rn.f32 	%f663, %f636, %f662;
	add.f32 	%f664, %f661, %f657;
	sub.f32 	%f665, %f661, %f664;
	add.f32 	%f666, %f657, %f665;
	add.f32 	%f667, %f659, %f666;
	add.f32 	%f668, %f663, %f667;
	add.f32 	%f669, %f664, %f668;
	sub.f32 	%f670, %f664, %f669;
	add.f32 	%f671, %f668, %f670;
	mov.f32 	%f672, 0f3EE66666;
	mul.rn.f32 	%f673, %f672, %f669;
	neg.f32 	%f674, %f673;
	fma.rn.f32 	%f675, %f672, %f669, %f674;
	fma.rn.f32 	%f676, %f672, %f671, %f675;
	mov.f32 	%f677, 0f00000000;
	fma.rn.f32 	%f678, %f677, %f669, %f676;
	add.rn.f32 	%f679, %f673, %f678;
	neg.f32 	%f680, %f679;
	add.rn.f32 	%f681, %f673, %f680;
	add.rn.f32 	%f682, %f681, %f678;
	mov.b32 	 %r275, %f679;
	setp.eq.s32	%p90, %r275, 1118925336;
	add.s32 	%r276, %r275, -1;
	mov.b32 	 %f683, %r276;
	add.f32 	%f684, %f682, 0f37000000;
	selp.f32	%f685, %f683, %f679, %p90;
	selp.f32	%f184, %f684, %f682, %p90;
	mul.f32 	%f686, %f685, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f687, %f686;
	mov.f32 	%f688, 0fBF317200;
	fma.rn.f32 	%f689, %f687, %f688, %f685;
	mov.f32 	%f690, 0fB5BFBE8E;
	fma.rn.f32 	%f691, %f687, %f690, %f689;
	mul.f32 	%f692, %f691, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f693, %f692;
	add.f32 	%f694, %f687, 0f00000000;
	ex2.approx.f32 	%f695, %f694;
	mul.f32 	%f696, %f693, %f695;
	setp.lt.f32	%p91, %f685, 0fC2D20000;
	selp.f32	%f697, 0f00000000, %f696, %p91;
	setp.gt.f32	%p92, %f685, 0f42D20000;
	selp.f32	%f983, 0f7F800000, %f697, %p92;
	setp.eq.f32	%p93, %f983, 0f7F800000;
	@%p93 bra 	BB0_93;

	fma.rn.f32 	%f983, %f983, %f184, %f983;

BB0_93:
	setp.lt.f32	%p94, %f179, 0f00000000;
	setp.eq.f32	%p95, %f182, 0f3F800000;
	and.pred  	%p4, %p94, %p95;
	mov.b32 	 %r277, %f983;
	xor.b32  	%r278, %r277, -2147483648;
	mov.b32 	 %f698, %r278;
	selp.f32	%f985, %f698, %f983, %p4;
	setp.eq.f32	%p96, %f179, 0f00000000;
	@%p96 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f701, %f179, %f179;
	selp.f32	%f985, %f701, 0f00000000, %p95;
	bra.uni 	BB0_97;

BB0_94:
	setp.geu.f32	%p97, %f179, 0f00000000;
	@%p97 bra 	BB0_97;

	cvt.rzi.f32.f32	%f700, %f672;
	setp.neu.f32	%p98, %f700, 0f3EE66666;
	selp.f32	%f985, 0f7FFFFFFF, %f985, %p98;

BB0_97:
	add.f32 	%f702, %f183, 0f3EE66666;
	mov.b32 	 %r279, %f702;
	setp.lt.s32	%p100, %r279, 2139095040;
	@%p100 bra 	BB0_102;

	setp.gtu.f32	%p101, %f183, 0f7F800000;
	@%p101 bra 	BB0_101;
	bra.uni 	BB0_99;

BB0_101:
	add.f32 	%f985, %f179, 0f3EE66666;
	bra.uni 	BB0_102;

BB0_99:
	setp.neu.f32	%p102, %f183, 0f7F800000;
	@%p102 bra 	BB0_102;

	selp.f32	%f985, 0fFF800000, 0f7F800000, %p4;

BB0_102:
	setp.eq.f32	%p103, %f179, 0f3F800000;
	selp.f32	%f195, 0f3F800000, %f985, %p103;
	abs.f32 	%f196, %f180;
	setp.lt.f32	%p104, %f196, 0f00800000;
	mul.f32 	%f705, %f196, 0f4B800000;
	selp.f32	%f706, 0fC3170000, 0fC2FE0000, %p104;
	selp.f32	%f707, %f705, %f196, %p104;
	mov.b32 	 %r280, %f707;
	and.b32  	%r281, %r280, 8388607;
	or.b32  	%r282, %r281, 1065353216;
	mov.b32 	 %f708, %r282;
	shr.u32 	%r283, %r280, 23;
	cvt.rn.f32.u32	%f709, %r283;
	add.f32 	%f710, %f706, %f709;
	setp.gt.f32	%p105, %f708, 0f3FB504F3;
	mul.f32 	%f711, %f708, 0f3F000000;
	add.f32 	%f712, %f710, 0f3F800000;
	selp.f32	%f713, %f711, %f708, %p105;
	selp.f32	%f714, %f712, %f710, %p105;
	add.f32 	%f715, %f713, 0fBF800000;
	add.f32 	%f704, %f713, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f703,%f704;
	// inline asm
	add.f32 	%f716, %f715, %f715;
	mul.f32 	%f717, %f703, %f716;
	mul.f32 	%f718, %f717, %f717;
	fma.rn.f32 	%f721, %f642, %f718, %f641;
	fma.rn.f32 	%f723, %f721, %f718, %f644;
	mul.rn.f32 	%f724, %f723, %f718;
	mul.rn.f32 	%f725, %f724, %f717;
	sub.f32 	%f726, %f715, %f717;
	neg.f32 	%f727, %f717;
	add.f32 	%f728, %f726, %f726;
	fma.rn.f32 	%f729, %f727, %f715, %f728;
	mul.rn.f32 	%f730, %f703, %f729;
	add.f32 	%f731, %f725, %f717;
	sub.f32 	%f732, %f717, %f731;
	add.f32 	%f733, %f725, %f732;
	add.f32 	%f734, %f730, %f733;
	add.f32 	%f735, %f731, %f734;
	sub.f32 	%f736, %f731, %f735;
	add.f32 	%f737, %f734, %f736;
	mul.rn.f32 	%f739, %f714, %f660;
	mul.rn.f32 	%f741, %f714, %f662;
	add.f32 	%f742, %f739, %f735;
	sub.f32 	%f743, %f739, %f742;
	add.f32 	%f744, %f735, %f743;
	add.f32 	%f745, %f737, %f744;
	add.f32 	%f746, %f741, %f745;
	add.f32 	%f747, %f742, %f746;
	sub.f32 	%f748, %f742, %f747;
	add.f32 	%f749, %f746, %f748;
	mul.rn.f32 	%f751, %f672, %f747;
	neg.f32 	%f752, %f751;
	fma.rn.f32 	%f753, %f672, %f747, %f752;
	fma.rn.f32 	%f754, %f672, %f749, %f753;
	fma.rn.f32 	%f756, %f677, %f747, %f754;
	add.rn.f32 	%f757, %f751, %f756;
	neg.f32 	%f758, %f757;
	add.rn.f32 	%f759, %f751, %f758;
	add.rn.f32 	%f760, %f759, %f756;
	mov.b32 	 %r284, %f757;
	setp.eq.s32	%p106, %r284, 1118925336;
	add.s32 	%r285, %r284, -1;
	mov.b32 	 %f761, %r285;
	add.f32 	%f762, %f760, 0f37000000;
	selp.f32	%f763, %f761, %f757, %p106;
	selp.f32	%f197, %f762, %f760, %p106;
	mul.f32 	%f764, %f763, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f765, %f764;
	fma.rn.f32 	%f767, %f765, %f688, %f763;
	fma.rn.f32 	%f769, %f765, %f690, %f767;
	mul.f32 	%f770, %f769, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f771, %f770;
	add.f32 	%f772, %f765, 0f00000000;
	ex2.approx.f32 	%f773, %f772;
	mul.f32 	%f774, %f771, %f773;
	setp.lt.f32	%p107, %f763, 0fC2D20000;
	selp.f32	%f775, 0f00000000, %f774, %p107;
	setp.gt.f32	%p108, %f763, 0f42D20000;
	selp.f32	%f986, 0f7F800000, %f775, %p108;
	setp.eq.f32	%p109, %f986, 0f7F800000;
	@%p109 bra 	BB0_104;

	fma.rn.f32 	%f986, %f986, %f197, %f986;

BB0_104:
	setp.lt.f32	%p110, %f180, 0f00000000;
	and.pred  	%p5, %p110, %p95;
	mov.b32 	 %r286, %f986;
	xor.b32  	%r287, %r286, -2147483648;
	mov.b32 	 %f776, %r287;
	selp.f32	%f988, %f776, %f986, %p5;
	setp.eq.f32	%p112, %f180, 0f00000000;
	@%p112 bra 	BB0_107;
	bra.uni 	BB0_105;

BB0_107:
	add.f32 	%f779, %f180, %f180;
	selp.f32	%f988, %f779, 0f00000000, %p95;
	bra.uni 	BB0_108;

BB0_105:
	setp.geu.f32	%p113, %f180, 0f00000000;
	@%p113 bra 	BB0_108;

	cvt.rzi.f32.f32	%f778, %f672;
	setp.neu.f32	%p114, %f778, 0f3EE66666;
	selp.f32	%f988, 0f7FFFFFFF, %f988, %p114;

BB0_108:
	add.f32 	%f780, %f196, 0f3EE66666;
	mov.b32 	 %r288, %f780;
	setp.lt.s32	%p116, %r288, 2139095040;
	@%p116 bra 	BB0_113;

	setp.gtu.f32	%p117, %f196, 0f7F800000;
	@%p117 bra 	BB0_112;
	bra.uni 	BB0_110;

BB0_112:
	add.f32 	%f988, %f180, 0f3EE66666;
	bra.uni 	BB0_113;

BB0_110:
	setp.neu.f32	%p118, %f196, 0f7F800000;
	@%p118 bra 	BB0_113;

	selp.f32	%f988, 0fFF800000, 0f7F800000, %p5;

BB0_113:
	setp.eq.f32	%p119, %f180, 0f3F800000;
	selp.f32	%f208, 0f3F800000, %f988, %p119;
	abs.f32 	%f209, %f181;
	setp.lt.f32	%p120, %f209, 0f00800000;
	mul.f32 	%f783, %f209, 0f4B800000;
	selp.f32	%f784, 0fC3170000, 0fC2FE0000, %p120;
	selp.f32	%f785, %f783, %f209, %p120;
	mov.b32 	 %r289, %f785;
	and.b32  	%r290, %r289, 8388607;
	or.b32  	%r291, %r290, 1065353216;
	mov.b32 	 %f786, %r291;
	shr.u32 	%r292, %r289, 23;
	cvt.rn.f32.u32	%f787, %r292;
	add.f32 	%f788, %f784, %f787;
	setp.gt.f32	%p121, %f786, 0f3FB504F3;
	mul.f32 	%f789, %f786, 0f3F000000;
	add.f32 	%f790, %f788, 0f3F800000;
	selp.f32	%f791, %f789, %f786, %p121;
	selp.f32	%f792, %f790, %f788, %p121;
	add.f32 	%f793, %f791, 0fBF800000;
	add.f32 	%f782, %f791, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f781,%f782;
	// inline asm
	add.f32 	%f794, %f793, %f793;
	mul.f32 	%f795, %f781, %f794;
	mul.f32 	%f796, %f795, %f795;
	fma.rn.f32 	%f799, %f642, %f796, %f641;
	fma.rn.f32 	%f801, %f799, %f796, %f644;
	mul.rn.f32 	%f802, %f801, %f796;
	mul.rn.f32 	%f803, %f802, %f795;
	sub.f32 	%f804, %f793, %f795;
	neg.f32 	%f805, %f795;
	add.f32 	%f806, %f804, %f804;
	fma.rn.f32 	%f807, %f805, %f793, %f806;
	mul.rn.f32 	%f808, %f781, %f807;
	add.f32 	%f809, %f803, %f795;
	sub.f32 	%f810, %f795, %f809;
	add.f32 	%f811, %f803, %f810;
	add.f32 	%f812, %f808, %f811;
	add.f32 	%f813, %f809, %f812;
	sub.f32 	%f814, %f809, %f813;
	add.f32 	%f815, %f812, %f814;
	mul.rn.f32 	%f817, %f792, %f660;
	mul.rn.f32 	%f819, %f792, %f662;
	add.f32 	%f820, %f817, %f813;
	sub.f32 	%f821, %f817, %f820;
	add.f32 	%f822, %f813, %f821;
	add.f32 	%f823, %f815, %f822;
	add.f32 	%f824, %f819, %f823;
	add.f32 	%f825, %f820, %f824;
	sub.f32 	%f826, %f820, %f825;
	add.f32 	%f827, %f824, %f826;
	mul.rn.f32 	%f829, %f672, %f825;
	neg.f32 	%f830, %f829;
	fma.rn.f32 	%f831, %f672, %f825, %f830;
	fma.rn.f32 	%f832, %f672, %f827, %f831;
	fma.rn.f32 	%f834, %f677, %f825, %f832;
	add.rn.f32 	%f835, %f829, %f834;
	neg.f32 	%f836, %f835;
	add.rn.f32 	%f837, %f829, %f836;
	add.rn.f32 	%f838, %f837, %f834;
	mov.b32 	 %r293, %f835;
	setp.eq.s32	%p122, %r293, 1118925336;
	add.s32 	%r294, %r293, -1;
	mov.b32 	 %f839, %r294;
	add.f32 	%f840, %f838, 0f37000000;
	selp.f32	%f841, %f839, %f835, %p122;
	selp.f32	%f210, %f840, %f838, %p122;
	mul.f32 	%f842, %f841, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f843, %f842;
	fma.rn.f32 	%f845, %f843, %f688, %f841;
	fma.rn.f32 	%f847, %f843, %f690, %f845;
	mul.f32 	%f848, %f847, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f849, %f848;
	add.f32 	%f850, %f843, 0f00000000;
	ex2.approx.f32 	%f851, %f850;
	mul.f32 	%f852, %f849, %f851;
	setp.lt.f32	%p123, %f841, 0fC2D20000;
	selp.f32	%f853, 0f00000000, %f852, %p123;
	setp.gt.f32	%p124, %f841, 0f42D20000;
	selp.f32	%f989, 0f7F800000, %f853, %p124;
	setp.eq.f32	%p125, %f989, 0f7F800000;
	@%p125 bra 	BB0_115;

	fma.rn.f32 	%f989, %f989, %f210, %f989;

BB0_115:
	setp.lt.f32	%p126, %f181, 0f00000000;
	and.pred  	%p6, %p126, %p95;
	mov.b32 	 %r295, %f989;
	xor.b32  	%r296, %r295, -2147483648;
	mov.b32 	 %f854, %r296;
	selp.f32	%f991, %f854, %f989, %p6;
	setp.eq.f32	%p128, %f181, 0f00000000;
	@%p128 bra 	BB0_118;
	bra.uni 	BB0_116;

BB0_118:
	add.f32 	%f857, %f181, %f181;
	selp.f32	%f991, %f857, 0f00000000, %p95;
	bra.uni 	BB0_119;

BB0_116:
	setp.geu.f32	%p129, %f181, 0f00000000;
	@%p129 bra 	BB0_119;

	cvt.rzi.f32.f32	%f856, %f672;
	setp.neu.f32	%p130, %f856, 0f3EE66666;
	selp.f32	%f991, 0f7FFFFFFF, %f991, %p130;

BB0_119:
	add.f32 	%f858, %f209, 0f3EE66666;
	mov.b32 	 %r297, %f858;
	setp.lt.s32	%p132, %r297, 2139095040;
	@%p132 bra 	BB0_124;

	setp.gtu.f32	%p133, %f209, 0f7F800000;
	@%p133 bra 	BB0_123;
	bra.uni 	BB0_121;

BB0_123:
	add.f32 	%f991, %f181, 0f3EE66666;
	bra.uni 	BB0_124;

BB0_121:
	setp.neu.f32	%p134, %f209, 0f7F800000;
	@%p134 bra 	BB0_124;

	selp.f32	%f991, 0fFF800000, 0f7F800000, %p6;

BB0_124:
	mov.u32 	%r336, 2;
	setp.eq.f32	%p135, %f181, 0f3F800000;
	selp.f32	%f859, 0f3F800000, %f991, %p135;
	cvt.u64.u32	%rd90, %r4;
	cvt.u64.u32	%rd89, %r3;
	mov.u64 	%rd93, image;
	cvta.global.u64 	%rd88, %rd93;
	// inline asm
	call (%rd87), _rt_buffer_get_64, (%rd88, %r336, %r102, %rd89, %rd90, %rd26, %rd26);
	// inline asm
	cvt.sat.f32.f32	%f860, %f859;
	mul.f32 	%f861, %f860, 0f437FFD71;
	cvt.rzi.u32.f32	%r300, %f861;
	cvt.sat.f32.f32	%f862, %f208;
	mul.f32 	%f863, %f862, 0f437FFD71;
	cvt.rzi.u32.f32	%r301, %f863;
	cvt.sat.f32.f32	%f864, %f195;
	mul.f32 	%f865, %f864, 0f437FFD71;
	cvt.rzi.u32.f32	%r302, %f865;
	cvt.u16.u32	%rs12, %r300;
	cvt.u16.u32	%rs13, %r302;
	cvt.u16.u32	%rs14, %r301;
	mov.u16 	%rs15, 255;
	st.v4.u8 	[%rd87], {%rs12, %rs14, %rs13, %rs15};
	ld.global.u32 	%r372, [imageEnabled];

BB0_125:
	and.b32  	%r303, %r372, 4;
	setp.eq.s32	%p136, %r303, 0;
	@%p136 bra 	BB0_129;

	ld.global.u32 	%r304, [additive];
	setp.eq.s32	%p137, %r304, 0;
	cvt.u64.u32	%rd17, %r3;
	cvt.u64.u32	%rd18, %r4;
	// inline asm
	{  cvt.rn.f16.f32 %rs16, %f407;}

	// inline asm
	@%p137 bra 	BB0_128;

	mov.u32 	%r337, 2;
	mov.u64 	%rd106, image_HDR;
	cvta.global.u64 	%rd95, %rd106;
	mov.u32 	%r308, 8;
	// inline asm
	call (%rd94), _rt_buffer_get_64, (%rd95, %r337, %r308, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	ld.v4.u16 	{%rs23, %rs24, %rs25, %rs26}, [%rd94];
	// inline asm
	{  cvt.f32.f16 %f867, %rs23;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f868, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f869, %rs25;}

	// inline asm
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd95, %r337, %r308, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	add.f32 	%f870, %f179, %f867;
	add.f32 	%f871, %f180, %f868;
	add.f32 	%f872, %f181, %f869;
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f872;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f871;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f870;}

	// inline asm
	st.v4.u16 	[%rd100], {%rs20, %rs21, %rs22, %rs16};
	bra.uni 	BB0_129;

BB0_128:
	mov.u32 	%r338, 2;
	mov.u64 	%rd113, image_HDR;
	cvta.global.u64 	%rd108, %rd113;
	mov.u32 	%r310, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r338, %r310, %rd17, %rd18, %rd26, %rd26);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f181;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f180;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs27, %f179;}

	// inline asm
	st.v4.u16 	[%rd107], {%rs27, %rs28, %rs29, %rs16};

BB0_129:
	ld.global.u8 	%rs30, [imageEnabled];
	and.b16  	%rs31, %rs30, 64;
	setp.eq.s16	%p138, %rs31, 0;
	@%p138 bra 	BB0_141;

	mov.u32 	%r339, 2;
	mul.f32 	%f876, %f941, %f941;
	fma.rn.f32 	%f877, %f942, %f942, %f876;
	fma.rn.f32 	%f878, %f940, %f940, %f877;
	sqrt.rn.f32 	%f879, %f878;
	rcp.rn.f32 	%f880, %f879;
	mul.f32 	%f881, %f942, %f880;
	mul.f32 	%f882, %f941, %f880;
	mul.f32 	%f883, %f940, %f880;
	cvt.u64.u32	%rd117, %r4;
	cvt.u64.u32	%rd116, %r3;
	mov.u64 	%rd120, image_Dir;
	cvta.global.u64 	%rd115, %rd120;
	// inline asm
	call (%rd114), _rt_buffer_get_64, (%rd115, %r339, %r102, %rd116, %rd117, %rd26, %rd26);
	// inline asm
	fma.rn.f32 	%f884, %f881, 0f3F000000, 0f3F000000;
	mul.f32 	%f885, %f884, 0f437F0000;
	cvt.rzi.u32.f32	%r313, %f885;
	fma.rn.f32 	%f886, %f882, 0f3F000000, 0f3F000000;
	mul.f32 	%f887, %f886, 0f437F0000;
	cvt.rzi.u32.f32	%r314, %f887;
	fma.rn.f32 	%f888, %f883, 0f3F000000, 0f3F000000;
	mul.f32 	%f889, %f888, 0f437F0000;
	cvt.rzi.u32.f32	%r315, %f889;
	cvt.u16.u32	%rs32, %r315;
	cvt.u16.u32	%rs33, %r314;
	cvt.u16.u32	%rs34, %r313;
	mov.u16 	%rs35, 255;
	st.v4.u8 	[%rd114], {%rs34, %rs33, %rs32, %rs35};

BB0_141:
	ret;
}


